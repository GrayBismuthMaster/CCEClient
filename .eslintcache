[{"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\config\\apollo.js":"1","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\restVsGraphQL.js":"2","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\restVsGraphQL2018.js":"3","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\index.js":"4","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\App.js":"5","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas2020.js":"6","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar.jsx":"7","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\DropDown\\MenuItems.js":"8","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\contacto.js":"9","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2018.jsx":"10","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas2018.js":"11","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Playground\\RestPlayground\\PlaygroundRest.jsx":"12","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas.js":"13","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2018.jsx":"14","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2018.jsx":"15","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\api.js":"16","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2020.jsx":"17","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2018.jsx":"18","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra.jsx":"19","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\apiRest.js":"20","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Playground\\GraphQLPlayground\\PlaygroundIde.jsx":"21","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra.jsx":"22","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2020.jsx":"23","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia.jsx":"24","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2020.jsx":"25","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2020.jsx":"26","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Navbar\\Navbar.jsx":"27","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartRestVsGraphQL\\BarChartGraphQL.jsx":"28","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\index.js":"29","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\DropDown\\Dropdown.js":"30","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\index.js":"31","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\App.js":"32","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\config\\apollo.js":"33","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\index.js":"34","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\restVsGraphQL.js":"35","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\restVsGraphQL2018.js":"36","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\despliegueEstadisticas.js":"37","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\despliegueEstadisticas2020.js":"38","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\despliegueEstadisticas2018.js":"39","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\contacto.js":"40","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\api.js":"41","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\apiRest.js":"42","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Navbar\\Navbar.jsx":"43","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Navbar\\NavbarElementos.js":"44","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\DropDown\\Dropdown.js":"45","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\BarChartRestVsGraphQL\\BarChartGraphQL.jsx":"46","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2020.jsx":"47","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia.jsx":"48","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra.jsx":"49","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2018.jsx":"50","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2020.jsx":"51","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2020.jsx":"52","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra.jsx":"53","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2018.jsx":"54","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2018.jsx":"55","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar.jsx":"56","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2020.jsx":"57","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2018.jsx":"58","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Playground\\GraphQLPlayground\\PlaygroundIde.jsx":"59","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Playground\\RestPlayground\\PlaygroundRest.jsx":"60","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\DropDown\\MenuItems.js":"61"},{"size":659,"mtime":1620834912044,"results":"62","hashOfConfig":"63"},{"size":4514,"mtime":1621483008679,"results":"64","hashOfConfig":"63"},{"size":4709,"mtime":1621457660702,"results":"65","hashOfConfig":"63"},{"size":369,"mtime":1615688064267,"results":"66","hashOfConfig":"63"},{"size":1760,"mtime":1620407679201,"results":"67","hashOfConfig":"63"},{"size":8317,"mtime":1621386099322,"results":"68","hashOfConfig":"63"},{"size":3304,"mtime":1621373586472,"results":"69","hashOfConfig":"63"},{"size":1098,"mtime":1621386996885,"results":"70","hashOfConfig":"63"},{"size":5880,"mtime":1621477394682,"results":"71","hashOfConfig":"63"},{"size":2506,"mtime":1621300336805,"results":"72","hashOfConfig":"63"},{"size":8209,"mtime":1621385634734,"results":"73","hashOfConfig":"63"},{"size":3522,"mtime":1621477939247,"results":"74","hashOfConfig":"63"},{"size":7778,"mtime":1621385640610,"results":"75","hashOfConfig":"63"},{"size":3041,"mtime":1621300389952,"results":"76","hashOfConfig":"63"},{"size":2872,"mtime":1621299102631,"results":"77","hashOfConfig":"63"},{"size":206,"mtime":1620430477246,"results":"78","hashOfConfig":"63"},{"size":3218,"mtime":1620166707043,"results":"79","hashOfConfig":"63"},{"size":3311,"mtime":1620089208896,"results":"80","hashOfConfig":"63"},{"size":2478,"mtime":1621299634168,"results":"81","hashOfConfig":"63"},{"size":206,"mtime":1620430451915,"results":"82","hashOfConfig":"63"},{"size":370,"mtime":1619146602162,"results":"83","hashOfConfig":"63"},{"size":2836,"mtime":1621306726843,"results":"84","hashOfConfig":"63"},{"size":2871,"mtime":1621299281619,"results":"85","hashOfConfig":"63"},{"size":2973,"mtime":1621299398357,"results":"86","hashOfConfig":"63"},{"size":2506,"mtime":1621300364178,"results":"87","hashOfConfig":"63"},{"size":3041,"mtime":1621300403851,"results":"88","hashOfConfig":"63"},{"size":5184,"mtime":1620356883133,"results":"89","hashOfConfig":"63"},{"size":1166,"mtime":1621456940271,"results":"90","hashOfConfig":"63"},{"size":3210,"mtime":1621393706947,"results":"91","hashOfConfig":"63"},{"size":795,"mtime":1621483991876,"results":"92","hashOfConfig":"63"},{"size":369,"mtime":1621484124000,"results":"93","hashOfConfig":"94"},{"size":1760,"mtime":1621484124000,"results":"95","hashOfConfig":"94"},{"size":639,"mtime":1621484124000,"results":"96","hashOfConfig":"94"},{"size":3149,"mtime":1621484124000,"results":"97","hashOfConfig":"94"},{"size":4389,"mtime":1621484124000,"results":"98","hashOfConfig":"94"},{"size":4581,"mtime":1621484124000,"results":"99","hashOfConfig":"94"},{"size":7608,"mtime":1621484124000,"results":"100","hashOfConfig":"94"},{"size":8148,"mtime":1621484124000,"results":"101","hashOfConfig":"94"},{"size":8040,"mtime":1621484124000,"results":"102","hashOfConfig":"94"},{"size":5769,"mtime":1621484124000,"results":"103","hashOfConfig":"94"},{"size":197,"mtime":1621484124000,"results":"104","hashOfConfig":"94"},{"size":205,"mtime":1622343367940,"results":"105","hashOfConfig":"94"},{"size":5056,"mtime":1621484124000,"results":"106","hashOfConfig":"94"},{"size":1560,"mtime":1621484124000,"results":"107","hashOfConfig":"94"},{"size":769,"mtime":1621484124000,"results":"108","hashOfConfig":"94"},{"size":1126,"mtime":1621484124000,"results":"109","hashOfConfig":"94"},{"size":2951,"mtime":1621484124000,"results":"110","hashOfConfig":"94"},{"size":2884,"mtime":1621484124000,"results":"111","hashOfConfig":"94"},{"size":2398,"mtime":1621484124000,"results":"112","hashOfConfig":"94"},{"size":2951,"mtime":1621484124000,"results":"113","hashOfConfig":"94"},{"size":2428,"mtime":1621484124000,"results":"114","hashOfConfig":"94"},{"size":2787,"mtime":1621484124000,"results":"115","hashOfConfig":"94"},{"size":2752,"mtime":1621484124000,"results":"116","hashOfConfig":"94"},{"size":2788,"mtime":1621484124000,"results":"117","hashOfConfig":"94"},{"size":2428,"mtime":1621484124000,"results":"118","hashOfConfig":"94"},{"size":3224,"mtime":1621484124000,"results":"119","hashOfConfig":"94"},{"size":3140,"mtime":1621484124000,"results":"120","hashOfConfig":"94"},{"size":3231,"mtime":1621484124000,"results":"121","hashOfConfig":"94"},{"size":357,"mtime":1621484124000,"results":"122","hashOfConfig":"94"},{"size":3420,"mtime":1621484124000,"results":"123","hashOfConfig":"94"},{"size":1052,"mtime":1621484124000,"results":"124","hashOfConfig":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"18jumts",{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"149"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"173"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q50zer",{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\config\\apollo.js",[],["285","286"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\restVsGraphQL.js",["287"],"import React,{useState,useEffect} from 'react'\r\nimport {useQuery,gql} from '@apollo/client'\r\nimport axios from 'axios'\r\nimport BarChartGraphQL from '../components/Charts/BarChartRestVsGraphQL/BarChartGraphQL'\r\nimport '../styles/restVsGraphQL.css'\r\nconst RestVsGraphQL = () => {\r\n    const [endRest, setEndRest] = useState(0)\r\n    const FRECUENCIAUSOINTERNET = gql `\r\n    query obtenerFrecuenciaUsoInternet{\r\n        obtenerFrecuenciaUsoInternet{\r\n            TodosLosDias\r\n            CadaDosDias\r\n            CadaTresDias\r\n            CadaCuatroDias\r\n            CadaCincoDias\r\n            tamanio\r\n        }\r\n    }\r\n    `\r\n    \r\n    let startQL = new Date().getTime();\r\n    let endQL = 0;\r\n    let resQL = 0;\r\n    const {data, loading, error}= useQuery(FRECUENCIAUSOINTERNET);\r\n    \r\n    if(!error && !loading) {\r\n        const data2 =data\r\n        console.log(data2)\r\n        console.log()\r\n        console.log('Tiempo al iniciar GraphQL en ms: '+startQL+\"ms\")\r\n        endQL= new Date().getTime()+1;\r\n    }\r\n        resQL =endQL-startQL; \r\n        console.log(\"Tiempo de finalización GraphQL en ms: \"+endQL+\"ms\");\r\n        console.log(\"Resultado del tiempo de ejecución GraphQL: \"+resQL) \r\n      \r\n    //Api rest\r\n    let startRest = new Date().getTime();\r\n   \r\n        useEffect(() => {\r\n            axios.get(\"https://salty-fjord-38974.herokuapp.com/api/frecuenciaUsoInternet/\")\r\n            .then(result=>{\r\n                console.log(result)\r\n                \r\n            }\r\n            ).catch(console.log() )\r\n            setEndRest (new Date().getTime());\r\n            console.log(endRest)    \r\n        }, [])\r\n        \r\n        let resRest = startRest- endRest;\r\n        const datosTamanio = ()=>{\r\n            if(data){\r\n                return <text>{data.obtenerFrecuenciaUsoInternet.tamanio+\" bytes\"}</text>\r\n            }\r\n            else{\r\n                return <text>Loading</text>\r\n            }\r\n        }\r\n    return (\r\n         <>\r\n        <div className='mainContainerRVG'>\r\n                       <div className=\"tituloRest\">\r\n                           Análisis de tiempo de  respuesta Api Graphql vs Api Rest\r\n                       </div>\r\n            \r\n            <div className=\"containerChartContenido\">\r\n                            \r\n                   <BarChartGraphQL tiempoRest={resRest} tiempoGraphQL ={resQL}/>\r\n               \r\n                <ul className='contenidoGraphQL'>\r\n                    <text style={{\r\n                        fontWeight:'bold'\r\n                    }}>Análisis de tiempo de respuesta API GraphQL con la petición al endpoint \"Frecuencia\r\n                     de uso de internet\"</text>\r\n                    <li style={{marginTop:\"4vh\"}}>\r\n                            Tiempo de inicio: {`${startQL} ms`}\r\n                    </li>\r\n                    <li>\r\n                            Tiempo de finalización: {`${endQL} ms`} \r\n                    </li>\r\n                    <li>\r\n                            Tiempo transcurrido total: {`${resQL} ms`} \r\n                    </li>\r\n                    <li>\r\n                            Número de datos obtenidos: 1300\r\n                    </li>\r\n                    <li>\r\n                            Tamaño de los datos : {datosTamanio()}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className='containerRest'>\r\n                      <ul style={{\r\n                          marginTop:'-5%',\r\n                          color:'#82ca9d'\r\n                      }}>\r\n                      <text style={{\r\n                        fontWeight:'bold'\r\n                    }}>Análisis de tiempo de respuesta API Rest con la petición al endpoint \"Frecuencia\r\n                     de uso de internet\"</text>\r\n                    <li style={{marginTop:\"4vh\"}}>\r\n                        Tiempo de inicio: {`${startRest} ms`}\r\n                    </li>\r\n                    <li>\r\n                        Tiempo de finalización: {`${endRest} ms`} \r\n                    </li>\r\n                    <li>\r\n                        Tiempo transcurrido total: {`${resRest} ms`} \r\n                    </li>\r\n                    <li>\r\n                        Número de datos obtenidos: 1300\r\n                    </li>\r\n                    <li>\r\n                         Tamaño de los datos : {datosTamanio()}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestVsGraphQL\r\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\restVsGraphQL2018.js",["288","289"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\index.js",[],["290","291"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\App.js",["292"],"import React,{useState} from 'react'\nimport Navbar from './components/Navbar/Navbar'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Home from './pages/index'\nimport restVsGraphQL from './pages/restVsGraphQL'\nimport restVsGraphQL2018 from './pages/restVsGraphQL2018'\nimport restVsGraphQL2020 from './pages/restVsGraphQL2018'\nimport despliegueEstadisticas from './pages/despliegueEstadisticas'\nimport despliegueEstadisticas2018 from './pages/despliegueEstadisticas2018'\nimport despliegueEstadisticas2020 from './pages/despliegueEstadisticas2020'\nimport contacto from './pages/contacto'\nimport api from './pages/api'\nimport apiRest from './pages/apiRest'\nimport './App.css'\n//Hace que apollo este disponible en todos los componentes de nuestra app\nfunction App() {\n  const [dropdown, setDropdown] = useState(false)\n  const setAbrirCerrarDropdown = () => {\n    setDropdown(!dropdown)\n  }\n  return (\n    \n      <Router>\n        <Navbar/>\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path='/restVsGraphQL' component={restVsGraphQL}/>  \n          <Route path='/restVsGraphQL2018' component={restVsGraphQL2018}/>\n          <Route path='/restVsGraphQL2020' component={restVsGraphQL2020}/>               \n          <Route path='/despliegueEstadisticas' component={despliegueEstadisticas}/>\n          <Route path='/despliegueEstadisticas2018' component={despliegueEstadisticas2018}/>\n          <Route path='/despliegueEstadisticas2020' component={despliegueEstadisticas2020}/>\n          <Route path='/contacto' component={contacto}/>\n          <Route path='/api' component={api}/>\n          <Route path='/apiRest' component={apiRest}/>\n        </Switch>\n      </Router>\n\n  );\n}\n\nexport default App;\n",["293","294"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas2020.js",["295"],"import React from 'react'\r\nimport '../components/Spinner/spinnerStyle.css'\r\nimport PieFrecuencia from '../components/Charts/PieChartFrecuenciaCompra/PieFrecuencia2020'\r\nimport MotivoNoCompra from '../components/Charts/BarChartMotivoNoCompra/MotivoNoCompra2020'\r\nimport CompraNoCompra from '../components/Charts/PieChartCompraNoCompra/CompraNoCompra2020'\r\nimport MotivacionCompra from '../components/Charts/VerticalChart/VerticalChartMotivacionComprar2020'\r\n//ASSETS BACKGROUNDS\r\nimport BackgroundPortada from \"../assets/img/portadaEcommerceDark.jpg\"\r\n//ICONS\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleRight} from '@fortawesome/free-solid-svg-icons'\r\nconst despliegueEstadisticas2020 = () => {\r\n    return (\r\n        <>\r\n            {\r\n                //Portada\r\n            }\r\n            <div style={{\r\n                display:\"flex\",\r\n                height:\"90vh\",\r\n                backgroundImage: `url(${BackgroundPortada} )`,\r\n                backgroundPosition: 'center',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat'\r\n            }}>\r\n                <div style={{\r\n                        display: 'flex',\r\n                        width:'100vw',\r\n                        height:'100vh',\r\n                        background: 'transparent',\r\n                        paddingTop: \"21vh\",\r\n                        fontWeight: \"bold\"\r\n                        }}>\r\n                        <div className=\"iconNav\"><FontAwesomeIcon className='icon' icon={faAngleRight}/>    \r\n                            <ul className=\"nav\">\r\n                                <li><a href=\"#\">Glosario</a></li>\r\n                                <li><a href=\"#compraNoCompra\">Algunos datos del Ecuador</a></li>\r\n                                <li><a href=\"#frecuenciaUsoInternet\">Frecuencia de uso de Internet</a></li>\r\n                                <li><a href=\"#motivoNoCompra\">Razones para no comprar</a></li>\r\n                                <li><a href=\"#motivoCompra\">Motivaciones para comprar</a> </li>\r\n                            </ul>\r\n                        </div>\r\n                        <h2 className='titulo'>  Antecedentes y situación del Ecommerce en el Ecuador</h2>\r\n                \r\n                    </div>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        width:'100vw',\r\n                        height:'90vh',\r\n                        background: 'transparent'\r\n                    }}>\r\n                        \r\n                    </div>\r\n                </div>\r\n            {\r\n                //Section 1: Porcentaje de compra\r\n            }\r\n            <div id=\"compraNoCompra\" className=\"mainContainer\">\r\n                <div className=\"firstContainer\">\r\n                    \r\n                    <CompraNoCompra/>\r\n                    <ul className=\"infoCompraNoCompra\">\r\n                                <li>* El 68% indica el porcentaje de personas que no realizan comercio electrónico \r\n                                    en un total de 1279 encuestas realizadas y el 32% las personas que si realizan \r\n                                    comercio electrónico\r\n                                </li>\r\n                            </ul>\r\n                </div>\r\n                <div className='mainContainerInfoChartMotivoNoCompra'>\r\n                        <div className='containerInfoChartMotivoNoCompra'>\r\n                            <h2 className='infoChartMotivoNoCompraTitulo'>Algunos datos del Ecuador</h2>\r\n                            <ul className='infoChartMotivoNoCompraContenido'>\r\n                                <li>Las empresas no escapan de este lento desarrollo de transacciones online \r\n                                    puesto que menos del 20% de las empresas realizan comercio electrónico\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div id=\"frecuenciaUsoInternet\" className='mainContainerFrecuenciaUsoInternet'>\r\n                \r\n                <div className='containerFrecuenciaUsoInternetChart'>\r\n                    \r\n                    <PieFrecuencia/>\r\n                    <ul className=\"infoChartFrecuenciaUsoInternet\">\r\n                                <li>* El 93.2% indica el porcentaje de personas que utilizan internet varias\r\n                                    veces al día, el 4.5% el porcentaje de personas que lo utilizan una o datos\r\n                                    veces al día, el 1.7% cada dos o tres días y el 0.6% representa una vez a \r\n                                    la semana\r\n                                </li>\r\n                            </ul>\r\n                </div>\r\n                    <div className='mainContainerFrecuenciaUsoInternetInfo'>\r\n                        <div className='containerFrecuenciaUsoInternetInfo'>\r\n                            <h2 className=\"frecuenciaUsoInternetInfoTitulo\">Frecuencia de Uso de Internet</h2>\r\n                            <ul className='frecuenciaUsoInternetInfoContenido'>\r\n                                <li>Internet se ha vuelto \r\n                                    imprescindible en las actividades \r\n                                    diarias, por eso su consulta es \r\n                                    constante. Estar “online” en \r\n                                    aplicaciones para comunicarse y \r\n                                    redes sociales, le da a los \r\n                                    usuarios el don de la ubicuidad \r\n                                    virtual con un solo click\r\n                                </li>\r\n                                \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                \r\n            </div>\r\n            {\r\n                //Section 2 \r\n            }\r\n            <div id=\"motivoNoCompra\" className='mainContainerMotivoNoCompra'>\r\n                <div className=\"containerMotivoNoCompra\">\r\n                    \r\n                    <MotivoNoCompra/>\r\n                \r\n                </div>\r\n                \r\n                <div className='mainContainerMotivoNoCompraInfo'>\r\n                        <div className=\"containerMotivoNoCompraInfo\">\r\n                            <h2 className='motivoNoCompraTitulo'>Razones para no comprar</h2>\r\n                            <ul className='motivoNoCompraContenido'>\r\n                                <li>\r\n                                    Si bien tener cerca el producto que se va a comprar es la razón más común para no haber realizado compras por \r\n                                    internet, el miedo y la desconfianza son los mayores\r\n                                    temores de los consumidores para esta relación comercial.\r\n                                </li>\r\n                            \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            {\r\n                //Section Motivaciones para comprar \r\n            }\r\n            <div id=\"motivoCompra\" className=\"mainContainerMotivoCompra\">\r\n                <div className=\"containerMotivoCompra\">\r\n                    \r\n                    <MotivacionCompra/>\r\n                \r\n                </div>\r\n                \r\n                <div className=\"mainContainerMotivoCompraInfo\">\r\n                        <div className='containerMotivoCompraInfo'>\r\n                            <h2 className='motivoCompraInfoTitulo'>Motivaciones para comprar</h2>\r\n                            <ul className='motivoCompraInfoContenido'>\r\n                                <li>\r\n                                Más información y garantías son las exigencias más comunes de los\r\n                                usuarios para disminuir sus temores y finalmente realizar alguna\r\n                                transacción comercial vía internet.\r\n\r\n                                </li>\r\n                            \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default despliegueEstadisticas2020\r\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar.jsx",["296","297","298"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\DropDown\\MenuItems.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\contacto.js",[],["299","300"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2018.jsx",["301","302"],"import React from 'react'\r\nimport {useQuery,gql} from '@apollo/client'\r\nimport {Spinner} from 'reactstrap'\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Cell, ResponsiveContainer\r\n} from 'recharts';\r\nconst MOTIVONOCOMPRA2018 = gql `\r\nquery obtenerMotivoNoCompra2018{\r\n    obtenerMotivoNoCompra2018{\r\n      PrefieroVerLoQueCompro\r\n      MiedoEntregarInfPer\r\n      MiedoSerEstafadoEnganiado\r\n      DesconfianzaFormaDePago\r\n    }\r\n  }\r\n`\r\n\r\nconst MotivoNoCompra2018 = () => {\r\n   \r\n    const {data, loading,error} = useQuery(MOTIVONOCOMPRA2018);\r\n    if(loading)\r\n    {\r\n      return (\r\n                <div className=\"divHijo\">\r\n                    <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\r\n                </div>\r\n  )\r\n    }\r\n    else{\r\n      \r\n    const datosBar = [\r\n      {\r\n          motivo: 'Prefiero ver lo que compro',  valor: ((data.obtenerMotivoNoCompra2018.PrefieroVerLoQueCompro* 100)/1279)/2\r\n      },\r\n      {\r\n          motivo: 'Miedo a entregar información personal', valor: ((data.obtenerMotivoNoCompra2018.MiedoEntregarInfPer*100)/1279)/2 \r\n      },\r\n      {\r\n          motivo: 'Miedo a ser estafado o engañado',  valor: ((data.obtenerMotivoNoCompra2018.MiedoSerEstafadoEnganiado*100)/1279)/2\r\n      },\r\n      {\r\n          motivo: 'Desconfianza en la forma de pago',  valor: ((data.obtenerMotivoNoCompra2018.DesconfianzaFormaDePago*100)/1279)/2\r\n      },\r\n      ];\r\n  \r\n      const CustomLabel  = () =>{   \r\n              return (\r\n                <g>\r\n                  <foreignObject x={15} y=\"40%\" width={100} height={100}>\r\n                    <div>%</div>\r\n                  </foreignObject>\r\n                </g>\r\n              );\r\n      };\r\n      return (\r\n        <ResponsiveContainer width=\"99%\" height={\"100%\"}>\r\n            <BarChart\r\n              width={400}\r\n              height={400}\r\n              data={datosBar}\r\n              margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n              }}\r\n              barSize={40}\r\n            >\r\n              <XAxis dataKey=\"motivo\" fontSize=\"0\" scale=\"point\" padding={{ left: 40, right: 40 }} />\r\n              <YAxis label={CustomLabel}/> \r\n              <Tooltip />\r\n              <Legend />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Bar padding={{left:30}} dataKey=\"valor\" fill=\"#8884d8\" background={{ fill: '#eee' }} />\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    }\r\n}\r\n\r\nexport default MotivoNoCompra2018\r\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas2018.js",["303"],"import React from 'react'\r\nimport '../components/Spinner/spinnerStyle.css'\r\nimport PieFrecuencia from '../components/Charts/PieChartFrecuenciaCompra/PieFrecuencia2018'\r\nimport MotivoNoCompra from '../components/Charts/BarChartMotivoNoCompra/MotivoNoCompra2018'\r\nimport CompraNoCompra from '../components/Charts/PieChartCompraNoCompra/CompraNoCompra2018'\r\nimport MotivacionCompra from '../components/Charts/VerticalChart/VerticalChartMotivacionComprar2018'\r\n//ASSETS BACKGROUNDS\r\nimport BackgroundPortada from \"../assets/img/portadaEcommerceDark.jpg\"\r\n//ICONS\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleRight} from '@fortawesome/free-solid-svg-icons'\r\nconst despliegueEstadisticas2018 = () => {\r\n    return (\r\n        <>\r\n            {\r\n                //Portada\r\n            }\r\n            <div style={{\r\n                display:\"flex\",\r\n                height:\"90vh\",\r\n                backgroundImage: `url(${BackgroundPortada} )`,\r\n                backgroundPosition: 'center',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat'\r\n            }}>\r\n                <div style={{\r\n                        display: 'flex',\r\n                        width:'100vw',\r\n                        height:'100vh',\r\n                        background: 'transparent',\r\n                        paddingTop: \"21vh\",\r\n                        fontWeight: \"bold\"\r\n                        }}>\r\n                    \r\n                    <div className=\"iconNav\"><FontAwesomeIcon className='icon' icon={faAngleRight}/>    \r\n                        <ul className=\"nav\">\r\n                            <li><a href=\"#\">Glosario</a></li>\r\n                            <li><a href=\"#compraNoCompra\">Algunos datos del Ecuador</a></li>\r\n                            <li><a href=\"#frecuenciaUsoInternet\">Frecuencia de uso de Internet</a></li>\r\n                            <li><a href=\"#motivoNoCompra\">Razones para no comprar</a></li>\r\n                            <li><a href=\"#motivoCompra\">Motivaciones para comprar</a> </li>\r\n                        </ul>\r\n                    </div>\r\n                        <h2 className='titulo'>  Antecedentes y situación del Ecommerce en el Ecuador</h2>\r\n                \r\n                    </div>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        width:'100vw',\r\n                        height:'90vh',\r\n                        background: 'transparent'\r\n                    }}>\r\n                        \r\n                    </div>\r\n                </div>\r\n            {\r\n                //Section 1: Porcentaje de compra\r\n            }\r\n            <div id=\"compraNoCompra\" className=\"mainContainer\" >\r\n                <div className=\"firstContainer\">\r\n                    \r\n                    <CompraNoCompra/>\r\n                    <ul className=\"infoCompraNoCompra\">\r\n                                <li>* El 66% indica el porcentaje de personas que no realizan comercio electrónico \r\n                                    en un total de 1279 encuestas realizadas y el 34% las personas que si realizan \r\n                                    comercio electrónico\r\n                                </li>\r\n                            </ul>\r\n                </div>\r\n                <div className='mainContainerInfoChartMotivoNoCompra'>\r\n                        <div className='containerInfoChartMotivoNoCompra'>\r\n                            <h2 className='infoChartMotivoNoCompraTitulo'>Algunos datos del Ecuador</h2>\r\n                            <ul className='infoChartMotivoNoCompraContenido'>\r\n                                <li>Las empresas no escapan de este lento desarrollo de transacciones online \r\n                                    puesto que menos del 20% de las empresas realizan comercio electrónico\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div id=\"frecuenciaUsoInternet\" className='mainContainerFrecuenciaUsoInternet'>\r\n                \r\n                <div className='containerFrecuenciaUsoInternetChart'>\r\n                    \r\n                    <PieFrecuencia/>\r\n                    <ul className=\"infoChartFrecuenciaUsoInternet\">\r\n                                <li>* El 91% indica el porcentaje de personas que utilizan internet varias\r\n                                    veces al día, el 6% el porcentaje de personas que lo utilizan una o datos\r\n                                    veces al día, el 2% cada dos o tres días y el 0.6% representa una vez a \r\n                                    la semana\r\n                                </li>\r\n                            </ul>\r\n                </div>\r\n                    <div className='mainContainerFrecuenciaUsoInternetInfo'>\r\n                        <div className='containerFrecuenciaUsoInternetInfo'>\r\n                            <h2 className=\"frecuenciaUsoInternetInfoTitulo\" >Frecuencia de Uso de Internet</h2>\r\n                            <ul className='frecuenciaUsoInternetInfoContenido'>\r\n                                <li>Internet se ha vuelto \r\n                            imprescindible en las actividades \r\n                            diarias, por eso su consulta es \r\n                            constante. Estar “online” en \r\n                            aplicaciones para comunicarse y \r\n                            redes sociales, le da a los \r\n                            usuarios el don de la ubicuidad \r\n                            virtual con un solo click</li>\r\n                                \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                \r\n            </div>\r\n            {\r\n                //Section 2 \r\n            }\r\n            <div id=\"motivoNoCompra\" className='mainContainerMotivoNoCompra'>\r\n                <div className=\"containerMotivoNoCompra\">\r\n                    \r\n                    <MotivoNoCompra/>\r\n                \r\n                </div>\r\n                \r\n                <div className='mainContainerMotivoNoCompraInfo'>\r\n                        <div className=\"containerMotivoNoCompraInfo\">\r\n                            <h2 className='motivoNoCompraTitulo'>Razones para no comprar</h2>\r\n                            <ul className='motivoNoCompraContenido'>\r\n                                <li>\r\n                                    Si bien tener cerca el producto que se va a comprar es la razón más común para no haber realizado compras por \r\n                                    internet, el miedo y la desconfianza son los mayores\r\n                                    temores de los consumidores para esta relación comercial.\r\n                                </li>\r\n                            \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            {\r\n                //Section Motivaciones para comprar \r\n            }\r\n            <div id=\"motivoCompra\" className=\"mainContainerMotivoCompra\">\r\n                <div className=\"containerMotivoCompra\">\r\n                    \r\n                    <MotivacionCompra/>\r\n                \r\n                </div>\r\n                \r\n                <div className=\"mainContainerMotivoCompraInfo\">\r\n                        <div className='containerMotivoCompraInfo'>\r\n                            <h2 className='motivoCompraInfoTitulo'>Motivaciones para comprar</h2>\r\n                            <ul className='motivoCompraInfoContenido'>\r\n                                <li>\r\n                                Más información y garantías son las exigencias más comunes de los\r\n                                usuarios para disminuir sus temores y finalmente realizar alguna\r\n                                transacción comercial vía internet.\r\n\r\n                                </li>\r\n                            \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default despliegueEstadisticas2018\r\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Playground\\RestPlayground\\PlaygroundRest.jsx",["304","305"],"import React, { useState} from 'react'\r\nimport '../RestPlayground/PlaygroundRest.css'\r\nimport axios from 'axios'\r\nconst PlaygroundRest = () => {\r\n    //Booleanos State\r\n    const [frecuencia, setFrecuencia] = useState(false)\r\n    const [motivoNoCompra, setMotivoNoCompra] = useState(false)\r\n   //State Api\r\n   const [datosFrecuencia, setDatosFrecuencia] = useState('')\r\n   const [datosMotivoNoCompra, setDatosMotivoNoCompra] =useState([])\r\n   \r\n    //Booleanos funciones\r\n    const setEndpointFrecuenciaUsoInternet = ()=>{\r\n        setFrecuencia(!frecuencia)\r\n        setMotivoNoCompra(false)\r\n        console.log('uno')\r\n    }\r\n    const setEndpointMotivoNoCompra = ()=>{\r\n        setMotivoNoCompra(!motivoNoCompra)\r\n        setFrecuencia(false)\r\n        console.log('dos')\r\n    }\r\n    //DOM\r\n    const funcFrecuencia= ()=>{\r\n        console.log('ingresa')\r\n        //useEffect(() => {    \r\n            axios.get(\"https://salty-fjord-38974.herokuapp.com/api/frecuenciaUsoInternet/\")\r\n            .then(result=>{\r\n                console.log(result)\r\n                const nuevo = JSON.stringify(result.data)\r\n                setDatosFrecuencia(nuevo)\r\n            }\r\n            ).catch(console.log() )\r\n      //  }, [])\r\n            return (\r\n                <div className='datosFrecuencia'>{datosFrecuencia}</div>\r\n            )\r\n    }\r\n    const funcMotivoNoCompra= ()=>{\r\n        console.log('ingresa')\r\n        //useEffect(() => {    \r\n            axios.get(\"https://salty-fjord-38974.herokuapp.com/api/motivoNoCompra/\")\r\n            .then(result=>{\r\n                console.log(result)\r\n                const nuevo = JSON.stringify(result.data)\r\n                setDatosMotivoNoCompra(nuevo)\r\n            }\r\n            ).catch(console.log() )\r\n      //  }, [])\r\n            return (\r\n                <div className='datosFrecuencia' >{datosMotivoNoCompra}</div>\r\n            )\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div style={{\r\n            display:'flex',\r\n            width:'100%',\r\n            height:'89.3vh',\r\n            flexDirection:'column'\r\n        }}>\r\n            <div style={{\r\n                display:'flex',\r\n                width:'100%',\r\n                height:'50%',\r\n                alignItems:'center',\r\n                justifyContent:'center',\r\n                }}>\r\n                <div className='dropdown' style={{marginTop:'-10%'}}> \r\n                    <button className='dropbtn'>Endpoints Api Rest</button>\r\n                    <div className=\"dropdown-content\">\r\n                            <a onClick={setEndpointFrecuenciaUsoInternet} >/api/frecuenciaUsoInternet/</a>\r\n                            <a onClick={setEndpointMotivoNoCompra } >api/motivoNoCompra/</a>\r\n                    </div>                    \r\n                </div>\r\n                <div style={{\r\n                    marginLeft:'15vw'\r\n                }}>Endpoint: https://salty-fjord-38974.herokuapp.com/</div>\r\n            </div>\r\n            <div style={{\r\n                display:'flex',\r\n                width:'100%',\r\n                height:'50%',\r\n                alignItems:'center',\r\n                justifyContent:'center',\r\n                }}>\r\n                {\r\n                    frecuencia && !motivoNoCompra ? funcFrecuencia() : null\r\n                }  \r\n\r\n                \r\n                {\r\n                    motivoNoCompra && !frecuencia ? funcMotivoNoCompra() : null\r\n                }  \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaygroundRest\r\n",["306","307"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas.js",["308"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2018.jsx",["309"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2018.jsx",["310"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\api.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2020.jsx",["311","312","313"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2018.jsx",["314","315","316"],"import React from 'react'\r\nimport {useQuery,gql} from '@apollo/client'\r\nimport { ComposedChart,Line,Area,Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\r\nimport {Spinner} from 'reactstrap'\r\n    \r\nconst VerticalChartMotivacionComprar2018 = () => {\r\n    const MOTIVACIONCOMPRAR2018 = gql`\r\n    query obtenerMotivacionCompra2018{\r\n        obtenerMotivacionCompra2018{\r\n          garantiaDevolucionCambio\r\n          garantiaConfidencialidadInformacion\r\n          informacionComoComprar\r\n          atencionClienteDuranteCompra\r\n          asistenciaDuranteProceso\r\n          bajoCostoEnvio\r\n          puntualidadEntrega\r\n          variedadOfertas\r\n          tutoriales\r\n          otras\r\n        }\r\n      }\r\n    `\r\n\r\n    const {data, loading,error} = useQuery(MOTIVACIONCOMPRAR2018);\r\n    \r\n    if(loading){\r\n      \r\n        return (\r\n          \r\n                  <div className=\"divHijo\">\r\n                       <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\r\n                  </div>\r\n       \r\n        )\r\n      } \r\n      else{\r\n          //Graficas\r\n          const datosVertical = [\r\n              { name: 'Garantía de devolución de cambio', valor: data.obtenerMotivacionCompra2018.garantiaDevolucionCambio },\r\n              { name: 'Garantía de confidencialidad', valor: data.obtenerMotivacionCompra2018.garantiaConfidencialidadInformacion },\r\n              { name: 'Más información de cómo comprar', valor: data.obtenerMotivacionCompra2018.informacionComoComprar },\r\n              { name: 'Atención al cliente durante la compra', valor: data.obtenerMotivacionCompra2018.atencionClienteDuranteCompra },\r\n              { name: 'Asistencia durante el proceso', valor: data.obtenerMotivacionCompra2018.asistenciaDuranteProceso },\r\n              { name: 'Bajos costos de envío', valor: data.obtenerMotivacionCompra2018.bajoCostoEnvio },\r\n              { name: 'Puntualidad de entrega', valor: data.obtenerMotivacionCompra2018.puntualidadEntrega },\r\n              { name: 'Mayor variedad de ofertas', valor: data.obtenerMotivacionCompra2018.variedadOfertas },\r\n              { name: 'Tutoriales o inducción para comprar', valor: data.obtenerMotivacionCompra2018.tutoriales },\r\n              { name: 'Otras', valor: data.obtenerMotivacionCompra2018.otras }\r\n            ];\r\n\r\n         \r\n      return (\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <ComposedChart\r\n                    layout=\"vertical\"\r\n                    width={500}\r\n                    height={400}\r\n                    data={datosVertical}\r\n                    margin={{\r\n                        top: 10,\r\n                        right: 50,\r\n                        bottom: 20,\r\n                        left: 50,\r\n                    }}\r\n                    fontSize={15.5}\r\n                >\r\n                <CartesianGrid stroke=\"#f5f5f5\" />\r\n                <XAxis type=\"number\" />\r\n                <YAxis dataKey=\"name\" type=\"category\" scale=\"band\" width={200}/>\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"valor\" barSize={20} fill=\"#413ea0\" />\r\n                </ComposedChart>\r\n            </ResponsiveContainer>\r\n          \r\n          )\r\n      }\r\n}\r\n\r\nexport default VerticalChartMotivacionComprar2018\r\n",["317","318"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra.jsx",["319","320"],"\r\nimport React from 'react';\r\nimport {useQuery,gql} from '@apollo/client'\r\nimport {Spinner} from 'reactstrap'\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Cell, ResponsiveContainer\r\n} from 'recharts';\r\nconst MOTIVONOCOMPRA = gql `\r\nquery obtenerMotivoNoCompra{\r\n    obtenerMotivoNoCompra{\r\n      PrefieroVerLoQueCompro\r\n      MiedoEntregarInfPer\r\n      MiedoSerEstafadoEnganiado\r\n      DesconfianzaFormaDePago\r\n    }\r\n  }\r\n`\r\n\r\nconst MotivoNoCompra = () => {\r\n\r\n    \r\n    const {data, loading,error} = useQuery(MOTIVONOCOMPRA);\r\n    if(loading)\r\n    {\r\n      return (\r\n                <div className=\"divHijo\">\r\n                    <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\r\n                </div>\r\n  )\r\n    }\r\n    else{\r\n      \r\n    const datosBar = [\r\n      {\r\n          motivo: 'Prefiero ver lo que compro',  valor: ((data.obtenerMotivoNoCompra.PrefieroVerLoQueCompro* 100)/1279)/2\r\n      },\r\n      {\r\n          motivo: 'Miedo a entregar información personal', valor: ((data.obtenerMotivoNoCompra.MiedoEntregarInfPer*100)/1279)/2 \r\n      },\r\n      {\r\n          motivo: 'Miedo a ser estafado o engañado',  valor: ((data.obtenerMotivoNoCompra.MiedoSerEstafadoEnganiado*100)/1279)/2\r\n      },\r\n      {\r\n          motivo: 'Desconfianza en la forma de pago',  valor: ((data.obtenerMotivoNoCompra.DesconfianzaFormaDePago*100)/1279)/2\r\n      },\r\n      ];\r\n  \r\n      const CustomLabel  = () =>{   \r\n              return (\r\n                <g>\r\n                  <foreignObject x={15} y=\"40%\" width={100} height={100}>\r\n                    <div>%</div>\r\n                  </foreignObject>\r\n                </g>\r\n              );\r\n      };\r\n      return (\r\n        <ResponsiveContainer width={\"99%\"} height={\"100%\"}>\r\n            <BarChart\r\n              width={\"50%\"}\r\n              height={\"50%\"}\r\n              data={datosBar}\r\n              margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n              }}\r\n              barSize={40}\r\n            >\r\n              <XAxis dataKey=\"motivo\" fontSize=\"0\" scale=\"point\" padding={{ left: 40, right: 40 }} />\r\n              <YAxis label={CustomLabel}/> \r\n              <Tooltip />\r\n              <Legend />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Bar padding={{left:30}} dataKey=\"valor\" fill=\"#8884d8\" background={{ fill: '#eee' }} />\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    }\r\n}\r\n\r\nexport default MotivoNoCompra\r\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\apiRest.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Playground\\GraphQLPlayground\\PlaygroundIde.jsx",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra.jsx",["321"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2020.jsx",["322"],"import React from 'react'\r\nimport {useQuery,gql} from '@apollo/client'\r\nimport {Spinner} from 'reactstrap'\r\nimport client from '../../../config/apollo.js'\r\n//Graficas en tiempo real\r\nimport {\r\n    PieChart, Pie,Cell,ResponsiveContainer\r\n  } from 'recharts';\r\nimport \"../PieChart.css\"\r\nconst CompraNoCompra2020 = () => {\r\n    const COMPRANOCOMPRA2020 = gql `\r\n    query obtenerCompraNoCompra2020{\r\n        obtenerCompraNoCompra2020{\r\n            compra\r\n            noCompra\r\n        }\r\n    }\r\n    `\r\n    const {data, loading,error} = useQuery(COMPRANOCOMPRA2020);\r\n    const someQueryResult = client.readQuery({ query: COMPRANOCOMPRA2020 });\r\n    if(someQueryResult){\r\n      console.log(someQueryResult)\r\n      console.log(\"si hay datos\")\r\n    }\r\n    \r\n    if(loading){\r\n      \r\n      return (\r\n        \r\n                <div className=\"divHijo\">\r\n                     <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\r\n                </div>\r\n     \r\n      )\r\n    } \r\n    else{\r\n        //Graficas\r\n        const datosGrafica = [\r\n            { name: 'Compran por internet', value: data.obtenerCompraNoCompra2020.compra },\r\n            { name: 'No compran por internet', value: data.obtenerCompraNoCompra2020.noCompra }\r\n          ];\r\n        //Obtener tamanio contenedor\r\n        const COLORS = ['#94b8b8', '#00C49F', '#FFBB28', '#FF8042'];\r\n        const RADIAN = Math.PI / 180;\r\n        const renderCustomizedLabel = ({\r\n            cx, cy, midAngle, innerRadius, outerRadius, percent,\r\n          }) => {\r\n             const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n          \r\n            return (\r\n              <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n              </text>\r\n            );\r\n          };\r\n    \r\n    return (\r\n        <>\r\n            <ResponsiveContainer width={'99%'} height={'100%'}>\r\n                 <PieChart width={400} height={400}>\r\n                    <Pie\r\n                        data={datosGrafica}\r\n                        cx={\"50%\"}\r\n                        cy={\"50%\"}\r\n                        labelLine={false}\r\n                        label={renderCustomizedLabel}\r\n                        outerRadius={\"100%\"}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                    >\r\n                        {\r\n                        datosGrafica.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                        }\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompraNoCompra2020\r\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia.jsx",["323"],"\r\nimport {useQuery,gql} from '@apollo/client'\r\nimport {Spinner} from 'reactstrap'\r\nimport client from '../../../config/apollo.js'\r\n//Graficas en tiempo real\r\nimport {\r\n    PieChart, Pie,Cell,ResponsiveContainer\r\n  } from 'recharts';\r\nimport \".././PieChart.css\"\r\nconst PieFrecuencia = () => {\r\n  const FRECUENCIAUSOINTERNET = gql `\r\nquery obtenerFrecuenciaUsoInternet{\r\n    obtenerFrecuenciaUsoInternet{\r\n        TodosLosDias\r\n        CadaDosDias\r\n        CadaTresDias\r\n        CadaCuatroDias\r\n        CadaCincoDias\r\n    }\r\n}\r\n`\r\nconst {data, loading,error} = useQuery(FRECUENCIAUSOINTERNET);\r\nconst someQueryResult = client.readQuery({ query: FRECUENCIAUSOINTERNET });\r\nif(someQueryResult){\r\n  console.log(someQueryResult)\r\n  console.log(\"si hay datos\")\r\n}\r\n\r\nif(loading){\r\n  \r\n  return (\r\n    \r\n            <div className=\"divHijo\">\r\n                 <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\r\n            </div>\r\n \r\n  )\r\n} \r\nelse{\r\n    //Graficas\r\n    const datosGrafica = [\r\n        { name: 'Todos los días', value: data.obtenerFrecuenciaUsoInternet.TodosLosDias },\r\n        { name: 'Cada dos días', value: data.obtenerFrecuenciaUsoInternet.CadaDosDias },\r\n        { name: 'Cada tres días', value: data.obtenerFrecuenciaUsoInternet.CadaTresDias },\r\n        { name: 'Cada cuatro días', value:data.obtenerFrecuenciaUsoInternet.CadaCuatroDias},\r\n      ];\r\n    //Obtener tamanio contenedor\r\n    const COLORS = ['#94b8b8', '#00C49F', '#FFBB28', '#FF8042'];\r\n    const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({\r\n        cx, cy, midAngle, innerRadius, outerRadius, percent,\r\n      }) => {\r\n         const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n      \r\n        return (\r\n          <text style={{\r\n              fontSize:'70%',  \r\n            }}\r\n           x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(1)}%`}\r\n          </text>\r\n        );\r\n      };\r\n\r\n    return (\r\n              <ResponsiveContainer width={'100%'} height={\"100%\"}>\r\n                 <PieChart width={'50%'} height={\"50%\"}>\r\n                    <Pie\r\n                        data={datosGrafica}\r\n                        cx={\"50%\"}\r\n                        cy={\"50%\"}\r\n                        labelLine={false}\r\n                        label={renderCustomizedLabel}\r\n                        outerRadius={\"100%\"}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                    >\r\n                        {\r\n                        datosGrafica.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                        }\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n    )\r\n}\r\n}\r\nexport default PieFrecuencia\r\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2020.jsx",["324","325"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2020.jsx",["326"],"import React from 'react'\r\nimport {useQuery,gql} from '@apollo/client'\r\nimport {Spinner} from 'reactstrap'\r\nimport client from '../../../config/apollo.js'\r\n//Graficas en tiempo real\r\nimport {\r\n    PieChart, Pie,Cell,ResponsiveContainer\r\n  } from 'recharts';\r\nimport \".././PieChart.css\"\r\nconst PieFrecuencia2020 = () => {\r\n    const FRECUENCIAUSOINTERNET2020 = gql `\r\nquery obtenerFrecuenciaUsoInternet2020{\r\n    obtenerFrecuenciaUsoInternet2020{\r\n        TodosLosDias\r\n        CadaDosDias\r\n        CadaTresDias\r\n        CadaCuatroDias\r\n        CadaCincoDias\r\n    }\r\n}\r\n`\r\nconst {data, loading,error} = useQuery(FRECUENCIAUSOINTERNET2020);\r\nconst someQueryResult = client.readQuery({ query: FRECUENCIAUSOINTERNET2020 });\r\nif(someQueryResult){\r\n  console.log(someQueryResult)\r\n  console.log(\"si hay datos\")\r\n}\r\n\r\nif(loading){\r\n  \r\n  return (\r\n    \r\n            <div className=\"divHijo\">\r\n                 <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\r\n            </div>\r\n \r\n  )\r\n} \r\nelse{\r\n    //Graficas\r\n    const datosGrafica = [\r\n        { name: 'Todos los días', value: data.obtenerFrecuenciaUsoInternet2020.TodosLosDias },\r\n        { name: 'Cada dos días', value: data.obtenerFrecuenciaUsoInternet2020.CadaDosDias },\r\n        { name: 'Cada tres días', value: data.obtenerFrecuenciaUsoInternet2020.CadaTresDias },\r\n        { name: 'Cada cuatro días', value:data.obtenerFrecuenciaUsoInternet2020.CadaCuatroDias},\r\n      ];\r\n    //Obtener tamanio contenedor\r\n    const COLORS = ['#94b8b8', '#00C49F', '#FFBB28', '#FF8042'];\r\n    const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({\r\n        cx, cy, midAngle, innerRadius, outerRadius, percent,\r\n      }) => {\r\n         const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n      \r\n        return (\r\n          <text style={{\r\n              fontSize:'70%',  \r\n            }}\r\n           x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(1)}%`}\r\n          </text>\r\n        );\r\n      };\r\n\r\n    return (\r\n              <ResponsiveContainer width={'99%'} height={\"100%\"}>\r\n                 <PieChart width={400} height={400}>\r\n                    <Pie\r\n                        data={datosGrafica}\r\n                        cx={\"50%\"}\r\n                        cy={\"50%\"}\r\n                        labelLine={false}\r\n                        label={renderCustomizedLabel}\r\n                        outerRadius={\"100%\"}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                    >\r\n                        {\r\n                        datosGrafica.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                        }\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n    )\r\n}\r\n}\r\n\r\nexport default PieFrecuencia2020\r\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartRestVsGraphQL\\BarChartGraphQL.jsx",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\pages\\index.js",["327","328"],"import React  from 'react'\r\nimport LogoCCE from '../assets/img/logoCCE.png'\r\nimport LogoUEES from '../assets/img/logoUEES.png'\r\nimport '../styles/indexStyle.css'\r\nconst Home = () => {\r\n   \r\n            return (\r\n            <>\r\n            <div className='mainContainerCss'>\r\n                        <p className=\"titulo\" >\r\n                            Datos públicos de Ecommerce del Ecuador 2021\r\n                        </p>\r\n                        <div className=\"containerCCE\" >\r\n                            <a target='_blank' href=\"https://cece.ec/\" rel=\"noreferrer\">\r\n                                <img src={LogoCCE} className=\"logoCCE\" >\r\n                                </img>\r\n                            </a>\r\n                            <p className=\"CCEContenido\" >\r\n                                La Cámara Ecuatoriana de Comercio Electrónico es una asociación sin\r\n                                 fines de lucro creada en el 2014 con el objetivo de divulgar y promover \r\n                                 el uso de las nuevas tecnologías aplicadas al trabajo y los negocios, \r\n                                 las comunicaciones, el comercio y los negocios electrónicos.\r\n                                La cual intenta fomentar que siga creciendo el ecosistema del comercio \r\n                                electrónico en el país y la región.\r\n                                Link: https://cece.ec\r\n\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"containerUESS\">\r\n                             <a target=\"_blank\" href=\"https://www.uees.edu.ec/investigacion/\" rel=\"noreferrer\">\r\n                             <img src={LogoUEES} className=\"logoUESS\"></img>\r\n                                </a>\r\n                            \r\n                            <p className=\"contenidoUESS\">\r\n                                La Universidad Espíritu Santo actualmente cuenta con alrededor de 5.000 estudiantes. \r\n                                Tiene diez facultades y 51 carreras (entre Pregrado y Postgrado). Su misión es servir a \r\n                                la sociedad mediante la generación de entornos de aprendizaje para la formación integral \r\n                                de personas que, a través de la docencia, investigación y vinculación, contribuyan al desarrollo\r\n                                 del país.\r\n                                La UEES se visualiza como un centro de docencia, investigación y orientación que aporta\r\n                                 alternativas para el desarrollo del país.\r\n                                LINK: https://www.uees.edu.ec/investigacion/\r\n                            </p>\r\n                        </div>\r\n            </div>  \r\n            <div style={{\r\n                display:'flex',\r\n                backgroundColor:'black',\r\n                height:'9vh',\r\n                justifyContent:'center',\r\n                alignItems: 'center',\r\n                color: 'white'\r\n            }}>\r\n                \r\n                @2021 Datos públicos de Ecommerce en Ecuador\r\n            </div>\r\n            </>\r\n            )\r\n    }\r\n\r\nexport default Home\r\n",["329","330"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\client\\src\\components\\DropDown\\Dropdown.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\index.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\App.js",["331"],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\config\\apollo.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\index.js",["332","333"],"import React  from 'react'\nimport LogoCCE from '../assets/img/logoCCE.png'\nimport LogoUEES from '../assets/img/logoUEES.png'\nimport '../styles/indexStyle.css'\nconst Home = () => {\n   \n            return (\n            <>\n            <div className='mainContainerCss'>\n                        <p className=\"titulo\" >\n                            Datos públicos de Ecommerce del Ecuador 2021\n                        </p>\n                        <div className=\"containerCCE\" >\n                            <a target='_blank' href=\"https://cece.ec/\" rel=\"noreferrer\">\n                                <img src={LogoCCE} className=\"logoCCE\" >\n                                </img>\n                            </a>\n                            <p className=\"CCEContenido\" >\n                                La Cámara Ecuatoriana de Comercio Electrónico es una asociación sin\n                                 fines de lucro creada en el 2014 con el objetivo de divulgar y promover \n                                 el uso de las nuevas tecnologías aplicadas al trabajo y los negocios, \n                                 las comunicaciones, el comercio y los negocios electrónicos.\n                                La cual intenta fomentar que siga creciendo el ecosistema del comercio \n                                electrónico en el país y la región.\n                                Link: https://cece.ec\n\n                            </p>\n                        </div>\n                        <div className=\"containerUESS\">\n                             <a target=\"_blank\" href=\"https://www.uees.edu.ec/investigacion/\" rel=\"noreferrer\">\n                             <img src={LogoUEES} className=\"logoUESS\"></img>\n                                </a>\n                            \n                            <p className=\"contenidoUESS\">\n                                La Universidad Espíritu Santo actualmente cuenta con alrededor de 5.000 estudiantes. \n                                Tiene diez facultades y 51 carreras (entre Pregrado y Postgrado). Su misión es servir a \n                                la sociedad mediante la generación de entornos de aprendizaje para la formación integral \n                                de personas que, a través de la docencia, investigación y vinculación, contribuyan al desarrollo\n                                 del país.\n                                La UEES se visualiza como un centro de docencia, investigación y orientación que aporta\n                                 alternativas para el desarrollo del país.\n                                LINK: https://www.uees.edu.ec/investigacion/\n                            </p>\n                        </div>\n            </div>  \n            <div style={{\n                display:'flex',\n                backgroundColor:'black',\n                height:'9vh',\n                justifyContent:'center',\n                alignItems: 'center',\n                color: 'white'\n            }}>\n                \n                @2021 Datos públicos de Ecommerce en Ecuador\n            </div>\n            </>\n            )\n    }\n\nexport default Home\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\restVsGraphQL.js",["334"],"import React,{useState,useEffect} from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport axios from 'axios'\nimport BarChartGraphQL from '../components/Charts/BarChartRestVsGraphQL/BarChartGraphQL'\nimport '../styles/restVsGraphQL.css'\nconst RestVsGraphQL = () => {\n    const [endRest, setEndRest] = useState(0)\n    const FRECUENCIAUSOINTERNET = gql `\n    query obtenerFrecuenciaUsoInternet{\n        obtenerFrecuenciaUsoInternet{\n            TodosLosDias\n            CadaDosDias\n            CadaTresDias\n            CadaCuatroDias\n            CadaCincoDias\n            tamanio\n        }\n    }\n    `\n    \n    let startQL = new Date().getTime();\n    let endQL = 0;\n    let resQL = 0;\n    const {data, loading, error}= useQuery(FRECUENCIAUSOINTERNET);\n    \n    if(!error && !loading) {\n        const data2 =data\n        console.log(data2)\n        console.log()\n        console.log('Tiempo al iniciar GraphQL en ms: '+startQL+\"ms\")\n        endQL= new Date().getTime()+1;\n    }\n        resQL =endQL-startQL; \n        console.log(\"Tiempo de finalización GraphQL en ms: \"+endQL+\"ms\");\n        console.log(\"Resultado del tiempo de ejecución GraphQL: \"+resQL) \n      \n    //Api rest\n    let startRest = new Date().getTime();\n   \n        useEffect(() => {\n            axios.get(\"https://salty-fjord-38974.herokuapp.com/api/frecuenciaUsoInternet/\")\n            .then(result=>{\n                console.log(result)\n                \n            }\n            ).catch(console.log() )\n            setEndRest (new Date().getTime());\n            console.log(endRest)    \n        }, [])\n        \n        let resRest = startRest- endRest;\n        const datosTamanio = ()=>{\n            if(data){\n                return <text>{data.obtenerFrecuenciaUsoInternet.tamanio+\" bytes\"}</text>\n            }\n            else{\n                return <text>Loading</text>\n            }\n        }\n    return (\n         <>\n        <div className='mainContainerRVG'>\n                       <div className=\"tituloRest\">\n                           Análisis de tiempo de  respuesta Api Graphql vs Api Rest\n                       </div>\n            \n            <div className=\"containerChartContenido\">\n                            \n                   <BarChartGraphQL tiempoRest={resRest} tiempoGraphQL ={resQL}/>\n               \n                <ul className='contenidoGraphQL'>\n                    <text style={{\n                        fontWeight:'bold'\n                    }}>Análisis de tiempo de respuesta API GraphQL con la petición al endpoint \"Frecuencia\n                     de uso de internet\"</text>\n                    <li style={{marginTop:\"4vh\"}}>\n                            Tiempo de inicio: {`${startQL} ms`}\n                    </li>\n                    <li>\n                            Tiempo de finalización: {`${endQL} ms`} \n                    </li>\n                    <li>\n                            Tiempo transcurrido total: {`${resQL} ms`} \n                    </li>\n                    <li>\n                            Número de datos obtenidos: 1300\n                    </li>\n                    <li>\n                            Tamaño de los datos : {datosTamanio()}\n                    </li>\n                </ul>\n            </div>\n            <div className='containerRest'>\n                      <ul style={{\n                          marginTop:'-5%',\n                          color:'#82ca9d'\n                      }}>\n                      <text style={{\n                        fontWeight:'bold'\n                    }}>Análisis de tiempo de respuesta API Rest con la petición al endpoint \"Frecuencia\n                     de uso de internet\"</text>\n                    <li style={{marginTop:\"4vh\"}}>\n                        Tiempo de inicio: {`${startRest} ms`}\n                    </li>\n                    <li>\n                        Tiempo de finalización: {`${endRest} ms`} \n                    </li>\n                    <li>\n                        Tiempo transcurrido total: {`${resRest} ms`} \n                    </li>\n                    <li>\n                        Número de datos obtenidos: 1300\n                    </li>\n                    <li>\n                         Tamaño de los datos : {datosTamanio()}\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n        </>\n    )\n}\n\nexport default RestVsGraphQL\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\restVsGraphQL2018.js",["335","336"],"import React,{useState,useEffect} from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport axios from 'axios'\nimport BarChartGraphQL from '../components/Charts/BarChartRestVsGraphQL/BarChartGraphQL'\nimport '../styles/restVsGraphQL.css'\nconst RestVsGraphQL = () => {\n    const [endRest, setEndRest] = useState(0);\n    \n    const FRECUENCIAUSOINTERNET2018 = gql `\n    query obtenerFrecuenciaUsoInternet2018{\n        obtenerFrecuenciaUsoInternet2018{\n            TodosLosDias\n            CadaDosDias\n            CadaTresDias\n            CadaCuatroDias\n            CadaCincoDias\n            tamanio\n        }\n    }\n    `\n    \n    let startQL = new Date().getTime();\n    let endQL = 0;\n    let resQL = 0;\n    const {data, loading, error}= useQuery(FRECUENCIAUSOINTERNET2018);\n\n        if(data!==null)\n        {\n            const data2 = data\n            console.log(data2)\n            console.log('Inicio '+startQL+\"ms\")\n            endQL = new Date().getTime()+1;\n               \n        }\n        \n        resQL =endQL-startQL; \n        console.log(\"fin \"+endQL+\"ms\");\n        console.log(\"Tiempo de ejecución: \"+resQL) \n    //Api rest\n    let startRest = new Date().getTime();\n        useEffect(() => {\n            axios.get(\"https://salty-fjord-38974.herokuapp.com/api/frecuenciaUsoInternet2018/\")\n            .then(result=>{\n                console.log(result)\n                setEndRest(new Date().getTime());\n            }\n            ).catch(console.log() )    \n        }, [])\n        \n        let resRest = startRest-endRest;\n\n        const datosTamanio = ()=>{\n            if(data){\n                return <text>{data.obtenerFrecuenciaUsoInternet2018.tamanio+\" bytes\"}</text>\n            }\n            else{\n                return <text>Loading</text>\n            }\n        }\n    return (\n         <>\n        <div className='mainContainerRVG'>\n                       <div className=\"tituloRest\">\n                           Análisis de tiempo de  respuesta Api Graphql vs Api Rest\n                       </div>\n            \n            <div className=\"containerChartContenido\">\n                            \n                   <BarChartGraphQL tiempoRest={resRest} tiempoGraphQL ={resQL}/>\n                <ul className='contenidoGraphQL'>\n                    <text style={{\n                        fontWeight:'bold'\n                    }}>Análisis de tiempo de respuesta API GraphQL con la petición al endpoint \"Frecuencia\n                     de uso de internet\"</text>\n                    <li style={{marginTop:\"4vh\"}}>\n                            Tiempo de inicio: {`${startQL} ms`}\n                    </li>\n                    <li>\n                            Tiempo de finalización: {`${endQL} ms`} \n                    </li>\n                    <li>\n                            Tiempo transcurrido total: {`${resQL} ms`} \n                    </li>\n                    <li>\n                            Número de datos obtenidos: 1300\n                    </li>\n                    <li>\n                        Tamaño de los datos : {//`${//data.obtenerFrecuenciaUsoInternet2018.tamanio} bytes`\n                                                datosTamanio()\n                                                }\n                    </li>\n                </ul>\n            </div>\n            <div className='containerRest'>\n                      <ul style={{\n                          marginTop:'-5%',\n                          color:'#82ca9d'\n                      }}>\n                      <text style={{\n                        fontWeight:'bold'\n                    }}>Análisis de tiempo de respuesta API Rest con la petición al endpoint \"Frecuencia\n                     de uso de internet\"</text>\n                    <li style={{marginTop:\"4vh\"}}>\n                        Tiempo de inicio: {`${startRest} ms`}\n                    </li>\n                    <li>\n                        Tiempo de finalización: {`${endRest} ms`} \n                    </li>\n                    <li>\n                        Tiempo transcurrido total: {`${resRest} ms`} \n                    </li>\n                    <li>\n                        Número de datos obtenidos: 1300\n                    </li>\n                    <li>\n                    Tamaño de los datos : {//`${data.obtenerFrecuenciaUsoInternet2018.tamanio} bytes`\n                                            datosTamanio()\n                                        }\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n        </>\n    )\n}\n\nexport default RestVsGraphQL\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\despliegueEstadisticas.js",["337"],"import React from 'react'\nimport '../components/Spinner/spinnerStyle.css'\nimport PieFrecuencia from '../components/Charts/PieChartFrecuenciaCompra/PieFrecuencia'\nimport MotivoNoCompra from '../components/Charts/BarChartMotivoNoCompra/MotivoNoCompra'\nimport CompraNoCompra from '../components/Charts/PieChartCompraNoCompra/CompraNoCompra'\nimport MotivacionCompra from '../components/Charts/VerticalChart/VerticalChartMotivacionComprar'\nimport '../styles/despliegueEstadisticas.css'\n//ASSETS BACKGROUNDS\nimport BackgroundPortada from \"../assets/img/portadaEcommerceDark.jpg\"\n//ICONS\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faAngleRight} from '@fortawesome/free-solid-svg-icons'\nconst despliegueEstadisticas = () => {\n    return (\n        <>\n         {\n             //Portada\n         }\n         <div id=\"inicio\" style={{\n              display:\"flex\",\n              height:\"90vh\",\n              backgroundImage: `url(${BackgroundPortada} )`,\n              backgroundPosition: 'center',\n              backgroundSize: 'cover',\n              backgroundRepeat: 'no-repeat'\n         }}>\n             <div style={{\n                    display: 'flex',\n                    width:'100vw',\n                    height:'100vh',\n                    background: 'transparent',\n                    paddingTop: \"21vh\",\n                    fontWeight: \"bold\"\n                    }}>\n    \n                    <div className=\"iconNav\"><FontAwesomeIcon className='icon' icon={faAngleRight}/>    \n                    <ul className=\"nav\">\n                        <li><a href=\"#\">Glosario</a></li>\n                        <li><a href=\"#compraNoCompra\">Algunos datos del Ecuador</a></li>\n                        <li><a href=\"#frecuenciaUsoInternet\">Frecuencia de uso de Internet</a></li>\n                        <li><a href=\"#motivoNoCompra\">Razones para no comprar</a></li>\n                        <li><a href=\"#motivoCompra\">Motivaciones para comprar</a> </li>\n                    </ul>\n                    </div>\n                    <h2 className='titulo' >\n                          Antecedentes y situación del Ecommerce en el Ecuador</h2>\n            \n                </div>\n                <div style={{\n                    display: 'flex',\n                    width:'100vw',\n                    height:'90vh',\n                    background: 'transparent'\n                }}>\n                    \n                </div>\n             </div>\n        {\n             //Section 1: Porcentaje de compra\n         }\n         <div className=\"mainContainer\" id=\"compraNoCompra\" >\n              <div className=\"firstContainer\" >\n                \n                <CompraNoCompra/>\n                <ul className=\"infoCompraNoCompra\" >\n                            <li>* El 86% indica el porcentaje de personas que no realizan comercio electrónico \n                                en un total de 1279 encuestas realizadas y el 14% las personas que si realizan \n                                comercio electrónico\n                            </li>\n                </ul>\n             </div>\n             <div className='mainContainerInfoChartMotivoNoCompra' >\n                    <div className='containerInfoChartMotivoNoCompra' >\n                        <h2 className='infoChartMotivoNoCompraTitulo' >Algunos datos del Ecuador</h2>\n                        <ul className='infoChartMotivoNoCompraContenido'>\n                            <li>Las empresas no escapan de este lento desarrollo de transacciones online \n                                puesto que menos del 20% de las empresas realizan comercio electrónico\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n         </div>\n\n\n\n        <div id=\"frecuenciaUsoInternet\" className='mainContainerFrecuenciaUsoInternet' >\n            \n            <div className='containerFrecuenciaUsoInternetChart' >\n                \n                <PieFrecuencia/>\n                <ul className=\"infoChartFrecuenciaUsoInternet\" >\n                            <li>* El 91% indica el porcentaje de personas que utilizan internet varias\n                                 veces al día, el 7% el porcentaje de personas que lo utilizan una o datos\n                                 veces al día, el 1.3% cada dos o tres días y el 0.3% representa una vez a \n                                 la semana\n                            </li>\n                        </ul>\n             </div>\n                <div className='mainContainerFrecuenciaUsoInternetInfo'>\n                    <div className='containerFrecuenciaUsoInternetInfo' >\n                        <h2 className=\"frecuenciaUsoInternetInfoTitulo\" >\n                            Frecuencia de Uso de Internet</h2>\n                        <ul className='frecuenciaUsoInternetInfoContenido'>\n                            <li>Internet se ha vuelto \n                        imprescindible en las actividades \n                        diarias, por eso su consulta es \n                        constante. Estar “online” en \n                        aplicaciones para comunicarse y \n                        redes sociales, le da a los \n                        usuarios el don de la ubicuidad \n                        virtual con un solo click</li>\n                            \n                        </ul>\n                    </div>\n                </div>\n            \n         </div>\n         {\n             //Section 3\n         }\n         <div id=\"motivoNoCompra\" className='mainContainerMotivoNoCompra' >\n              <div className=\"containerMotivoNoCompra\" >\n                \n                <MotivoNoCompra/>\n             \n             </div>\n             \n             <div className='mainContainerMotivoNoCompraInfo' >\n                    <div className=\"containerMotivoNoCompraInfo\" >\n                        <h2 className='motivoNoCompraTitulo' >Razones para no comprar</h2>\n                        <ul className='motivoNoCompraContenido'>\n                            <li>\n                                Si bien tener cerca el producto que se va a comprar es la razón más común para no haber realizado compras por \n                                internet, el miedo y la desconfianza son los mayores\n                                temores de los consumidores para esta relación comercial.\n                            </li>\n                           \n                        </ul>\n                    </div>\n                </div>\n         </div>\n         {\n             //Section 4: Motivaciones para comprar \n         }\n         <div id=\"motivoCompra\" className=\"mainContainerMotivoCompra\">\n              <div className=\"containerMotivoCompra\">\n                \n                <MotivacionCompra/>\n             \n             </div>\n             \n             <div className=\"mainContainerMotivoCompraInfo\">\n                    <div className='containerMotivoCompraInfo' >\n                        <h2 className='motivoCompraInfoTitulo'>Motivaciones para comprar</h2>\n                        <ul className='motivoCompraInfoContenido'>\n                            <li>\n                            Más información y garantías son las exigencias más comunes de los\n                             usuarios para disminuir sus temores y finalmente realizar alguna\n                            transacción comercial vía internet.\n\n                            </li>\n                           \n                        </ul>\n                    </div>\n                </div>\n         </div>\n         </>\n    )\n}\nexport default despliegueEstadisticas\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\despliegueEstadisticas2020.js",["338"],"import React from 'react'\nimport '../components/Spinner/spinnerStyle.css'\nimport PieFrecuencia from '../components/Charts/PieChartFrecuenciaCompra/PieFrecuencia2020'\nimport MotivoNoCompra from '../components/Charts/BarChartMotivoNoCompra/MotivoNoCompra2020'\nimport CompraNoCompra from '../components/Charts/PieChartCompraNoCompra/CompraNoCompra2020'\nimport MotivacionCompra from '../components/Charts/VerticalChart/VerticalChartMotivacionComprar2020'\n//ASSETS BACKGROUNDS\nimport BackgroundPortada from \"../assets/img/portadaEcommerceDark.jpg\"\n//ICONS\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faAngleRight} from '@fortawesome/free-solid-svg-icons'\nconst despliegueEstadisticas2020 = () => {\n    return (\n        <>\n            {\n                //Portada\n            }\n            <div style={{\n                display:\"flex\",\n                height:\"90vh\",\n                backgroundImage: `url(${BackgroundPortada} )`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat'\n            }}>\n                <div style={{\n                        display: 'flex',\n                        width:'100vw',\n                        height:'100vh',\n                        background: 'transparent',\n                        paddingTop: \"21vh\",\n                        fontWeight: \"bold\"\n                        }}>\n                        <div className=\"iconNav\"><FontAwesomeIcon className='icon' icon={faAngleRight}/>    \n                            <ul className=\"nav\">\n                                <li><a href=\"#\">Glosario</a></li>\n                                <li><a href=\"#compraNoCompra\">Algunos datos del Ecuador</a></li>\n                                <li><a href=\"#frecuenciaUsoInternet\">Frecuencia de uso de Internet</a></li>\n                                <li><a href=\"#motivoNoCompra\">Razones para no comprar</a></li>\n                                <li><a href=\"#motivoCompra\">Motivaciones para comprar</a> </li>\n                            </ul>\n                        </div>\n                        <h2 className='titulo'>  Antecedentes y situación del Ecommerce en el Ecuador</h2>\n                \n                    </div>\n                    <div style={{\n                        display: 'flex',\n                        width:'100vw',\n                        height:'90vh',\n                        background: 'transparent'\n                    }}>\n                        \n                    </div>\n                </div>\n            {\n                //Section 1: Porcentaje de compra\n            }\n            <div id=\"compraNoCompra\" className=\"mainContainer\">\n                <div className=\"firstContainer\">\n                    \n                    <CompraNoCompra/>\n                    <ul className=\"infoCompraNoCompra\">\n                                <li>* El 68% indica el porcentaje de personas que no realizan comercio electrónico \n                                    en un total de 1279 encuestas realizadas y el 32% las personas que si realizan \n                                    comercio electrónico\n                                </li>\n                            </ul>\n                </div>\n                <div className='mainContainerInfoChartMotivoNoCompra'>\n                        <div className='containerInfoChartMotivoNoCompra'>\n                            <h2 className='infoChartMotivoNoCompraTitulo'>Algunos datos del Ecuador</h2>\n                            <ul className='infoChartMotivoNoCompraContenido'>\n                                <li>Las empresas no escapan de este lento desarrollo de transacciones online \n                                    puesto que menos del 20% de las empresas realizan comercio electrónico\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n            </div>\n\n\n\n            <div id=\"frecuenciaUsoInternet\" className='mainContainerFrecuenciaUsoInternet'>\n                \n                <div className='containerFrecuenciaUsoInternetChart'>\n                    \n                    <PieFrecuencia/>\n                    <ul className=\"infoChartFrecuenciaUsoInternet\">\n                                <li>* El 93.2% indica el porcentaje de personas que utilizan internet varias\n                                    veces al día, el 4.5% el porcentaje de personas que lo utilizan una o datos\n                                    veces al día, el 1.7% cada dos o tres días y el 0.6% representa una vez a \n                                    la semana\n                                </li>\n                            </ul>\n                </div>\n                    <div className='mainContainerFrecuenciaUsoInternetInfo'>\n                        <div className='containerFrecuenciaUsoInternetInfo'>\n                            <h2 className=\"frecuenciaUsoInternetInfoTitulo\">Frecuencia de Uso de Internet</h2>\n                            <ul className='frecuenciaUsoInternetInfoContenido'>\n                                <li>Internet se ha vuelto \n                                    imprescindible en las actividades \n                                    diarias, por eso su consulta es \n                                    constante. Estar “online” en \n                                    aplicaciones para comunicarse y \n                                    redes sociales, le da a los \n                                    usuarios el don de la ubicuidad \n                                    virtual con un solo click\n                                </li>\n                                \n                            </ul>\n                        </div>\n                    </div>\n                \n            </div>\n            {\n                //Section 2 \n            }\n            <div id=\"motivoNoCompra\" className='mainContainerMotivoNoCompra'>\n                <div className=\"containerMotivoNoCompra\">\n                    \n                    <MotivoNoCompra/>\n                \n                </div>\n                \n                <div className='mainContainerMotivoNoCompraInfo'>\n                        <div className=\"containerMotivoNoCompraInfo\">\n                            <h2 className='motivoNoCompraTitulo'>Razones para no comprar</h2>\n                            <ul className='motivoNoCompraContenido'>\n                                <li>\n                                    Si bien tener cerca el producto que se va a comprar es la razón más común para no haber realizado compras por \n                                    internet, el miedo y la desconfianza son los mayores\n                                    temores de los consumidores para esta relación comercial.\n                                </li>\n                            \n                            </ul>\n                        </div>\n                    </div>\n            </div>\n            {\n                //Section Motivaciones para comprar \n            }\n            <div id=\"motivoCompra\" className=\"mainContainerMotivoCompra\">\n                <div className=\"containerMotivoCompra\">\n                    \n                    <MotivacionCompra/>\n                \n                </div>\n                \n                <div className=\"mainContainerMotivoCompraInfo\">\n                        <div className='containerMotivoCompraInfo'>\n                            <h2 className='motivoCompraInfoTitulo'>Motivaciones para comprar</h2>\n                            <ul className='motivoCompraInfoContenido'>\n                                <li>\n                                Más información y garantías son las exigencias más comunes de los\n                                usuarios para disminuir sus temores y finalmente realizar alguna\n                                transacción comercial vía internet.\n\n                                </li>\n                            \n                            </ul>\n                        </div>\n                    </div>\n            </div>\n        </>\n        \n    )\n}\n\nexport default despliegueEstadisticas2020\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\despliegueEstadisticas2018.js",["339"],"import React from 'react'\nimport '../components/Spinner/spinnerStyle.css'\nimport PieFrecuencia from '../components/Charts/PieChartFrecuenciaCompra/PieFrecuencia2018'\nimport MotivoNoCompra from '../components/Charts/BarChartMotivoNoCompra/MotivoNoCompra2018'\nimport CompraNoCompra from '../components/Charts/PieChartCompraNoCompra/CompraNoCompra2018'\nimport MotivacionCompra from '../components/Charts/VerticalChart/VerticalChartMotivacionComprar2018'\n//ASSETS BACKGROUNDS\nimport BackgroundPortada from \"../assets/img/portadaEcommerceDark.jpg\"\n//ICONS\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faAngleRight} from '@fortawesome/free-solid-svg-icons'\nconst despliegueEstadisticas2018 = () => {\n    return (\n        <>\n            {\n                //Portada\n            }\n            <div style={{\n                display:\"flex\",\n                height:\"90vh\",\n                backgroundImage: `url(${BackgroundPortada} )`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat'\n            }}>\n                <div style={{\n                        display: 'flex',\n                        width:'100vw',\n                        height:'100vh',\n                        background: 'transparent',\n                        paddingTop: \"21vh\",\n                        fontWeight: \"bold\"\n                        }}>\n                    \n                    <div className=\"iconNav\"><FontAwesomeIcon className='icon' icon={faAngleRight}/>    \n                        <ul className=\"nav\">\n                            <li><a href=\"#\">Glosario</a></li>\n                            <li><a href=\"#compraNoCompra\">Algunos datos del Ecuador</a></li>\n                            <li><a href=\"#frecuenciaUsoInternet\">Frecuencia de uso de Internet</a></li>\n                            <li><a href=\"#motivoNoCompra\">Razones para no comprar</a></li>\n                            <li><a href=\"#motivoCompra\">Motivaciones para comprar</a> </li>\n                        </ul>\n                    </div>\n                        <h2 className='titulo'>  Antecedentes y situación del Ecommerce en el Ecuador</h2>\n                \n                    </div>\n                    <div style={{\n                        display: 'flex',\n                        width:'100vw',\n                        height:'90vh',\n                        background: 'transparent'\n                    }}>\n                        \n                    </div>\n                </div>\n            {\n                //Section 1: Porcentaje de compra\n            }\n            <div id=\"compraNoCompra\" className=\"mainContainer\" >\n                <div className=\"firstContainer\">\n                    \n                    <CompraNoCompra/>\n                    <ul className=\"infoCompraNoCompra\">\n                                <li>* El 66% indica el porcentaje de personas que no realizan comercio electrónico \n                                    en un total de 1279 encuestas realizadas y el 34% las personas que si realizan \n                                    comercio electrónico\n                                </li>\n                            </ul>\n                </div>\n                <div className='mainContainerInfoChartMotivoNoCompra'>\n                        <div className='containerInfoChartMotivoNoCompra'>\n                            <h2 className='infoChartMotivoNoCompraTitulo'>Algunos datos del Ecuador</h2>\n                            <ul className='infoChartMotivoNoCompraContenido'>\n                                <li>Las empresas no escapan de este lento desarrollo de transacciones online \n                                    puesto que menos del 20% de las empresas realizan comercio electrónico\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n            </div>\n\n\n\n            <div id=\"frecuenciaUsoInternet\" className='mainContainerFrecuenciaUsoInternet'>\n                \n                <div className='containerFrecuenciaUsoInternetChart'>\n                    \n                    <PieFrecuencia/>\n                    <ul className=\"infoChartFrecuenciaUsoInternet\">\n                                <li>* El 91% indica el porcentaje de personas que utilizan internet varias\n                                    veces al día, el 6% el porcentaje de personas que lo utilizan una o datos\n                                    veces al día, el 2% cada dos o tres días y el 0.6% representa una vez a \n                                    la semana\n                                </li>\n                            </ul>\n                </div>\n                    <div className='mainContainerFrecuenciaUsoInternetInfo'>\n                        <div className='containerFrecuenciaUsoInternetInfo'>\n                            <h2 className=\"frecuenciaUsoInternetInfoTitulo\" >Frecuencia de Uso de Internet</h2>\n                            <ul className='frecuenciaUsoInternetInfoContenido'>\n                                <li>Internet se ha vuelto \n                            imprescindible en las actividades \n                            diarias, por eso su consulta es \n                            constante. Estar “online” en \n                            aplicaciones para comunicarse y \n                            redes sociales, le da a los \n                            usuarios el don de la ubicuidad \n                            virtual con un solo click</li>\n                                \n                            </ul>\n                        </div>\n                    </div>\n                \n            </div>\n            {\n                //Section 2 \n            }\n            <div id=\"motivoNoCompra\" className='mainContainerMotivoNoCompra'>\n                <div className=\"containerMotivoNoCompra\">\n                    \n                    <MotivoNoCompra/>\n                \n                </div>\n                \n                <div className='mainContainerMotivoNoCompraInfo'>\n                        <div className=\"containerMotivoNoCompraInfo\">\n                            <h2 className='motivoNoCompraTitulo'>Razones para no comprar</h2>\n                            <ul className='motivoNoCompraContenido'>\n                                <li>\n                                    Si bien tener cerca el producto que se va a comprar es la razón más común para no haber realizado compras por \n                                    internet, el miedo y la desconfianza son los mayores\n                                    temores de los consumidores para esta relación comercial.\n                                </li>\n                            \n                            </ul>\n                        </div>\n                    </div>\n            </div>\n            {\n                //Section Motivaciones para comprar \n            }\n            <div id=\"motivoCompra\" className=\"mainContainerMotivoCompra\">\n                <div className=\"containerMotivoCompra\">\n                    \n                    <MotivacionCompra/>\n                \n                </div>\n                \n                <div className=\"mainContainerMotivoCompraInfo\">\n                        <div className='containerMotivoCompraInfo'>\n                            <h2 className='motivoCompraInfoTitulo'>Motivaciones para comprar</h2>\n                            <ul className='motivoCompraInfoContenido'>\n                                <li>\n                                Más información y garantías son las exigencias más comunes de los\n                                usuarios para disminuir sus temores y finalmente realizar alguna\n                                transacción comercial vía internet.\n\n                                </li>\n                            \n                            </ul>\n                        </div>\n                    </div>\n            </div>\n        </>\n        \n    )\n}\n\nexport default despliegueEstadisticas2018\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\contacto.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\api.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\pages\\apiRest.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Navbar\\NavbarElementos.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\DropDown\\Dropdown.js",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\BarChartRestVsGraphQL\\BarChartGraphQL.jsx",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2020.jsx",["340"],"import React from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport {Spinner} from 'reactstrap'\nimport client from '../../../config/apollo.js'\n//Graficas en tiempo real\nimport {\n    PieChart, Pie,Cell,ResponsiveContainer\n  } from 'recharts';\nimport \".././PieChart.css\"\nconst PieFrecuencia2020 = () => {\n    const FRECUENCIAUSOINTERNET2020 = gql `\nquery obtenerFrecuenciaUsoInternet2020{\n    obtenerFrecuenciaUsoInternet2020{\n        TodosLosDias\n        CadaDosDias\n        CadaTresDias\n        CadaCuatroDias\n        CadaCincoDias\n    }\n}\n`\nconst {data, loading,error} = useQuery(FRECUENCIAUSOINTERNET2020);\nconst someQueryResult = client.readQuery({ query: FRECUENCIAUSOINTERNET2020 });\nif(someQueryResult){\n  console.log(someQueryResult)\n  console.log(\"si hay datos\")\n}\n\nif(loading){\n  \n  return (\n    \n            <div className=\"divHijo\">\n                 <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n            </div>\n \n  )\n} \nelse{\n    //Graficas\n    const datosGrafica = [\n        { name: 'Todos los días', value: data.obtenerFrecuenciaUsoInternet2020.TodosLosDias },\n        { name: 'Cada dos días', value: data.obtenerFrecuenciaUsoInternet2020.CadaDosDias },\n        { name: 'Cada tres días', value: data.obtenerFrecuenciaUsoInternet2020.CadaTresDias },\n        { name: 'Cada cuatro días', value:data.obtenerFrecuenciaUsoInternet2020.CadaCuatroDias},\n      ];\n    //Obtener tamanio contenedor\n    const COLORS = ['#94b8b8', '#00C49F', '#FFBB28', '#FF8042'];\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({\n        cx, cy, midAngle, innerRadius, outerRadius, percent,\n      }) => {\n         const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      \n        return (\n          <text style={{\n              fontSize:'70%',  \n            }}\n           x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(1)}%`}\n          </text>\n        );\n      };\n\n    return (\n              <ResponsiveContainer width={'99%'} height={\"100%\"}>\n                 <PieChart width={400} height={400}>\n                    <Pie\n                        data={datosGrafica}\n                        cx={\"50%\"}\n                        cy={\"50%\"}\n                        labelLine={false}\n                        label={renderCustomizedLabel}\n                        outerRadius={\"100%\"}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                    >\n                        {\n                        datosGrafica.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                        }\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n    )\n}\n}\n\nexport default PieFrecuencia2020\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia.jsx",["341"],"\nimport {useQuery,gql} from '@apollo/client'\nimport {Spinner} from 'reactstrap'\nimport client from '../../../config/apollo.js'\n//Graficas en tiempo real\nimport {\n    PieChart, Pie,Cell,ResponsiveContainer\n  } from 'recharts';\nimport \".././PieChart.css\"\nconst PieFrecuencia = () => {\n  const FRECUENCIAUSOINTERNET = gql `\nquery obtenerFrecuenciaUsoInternet{\n    obtenerFrecuenciaUsoInternet{\n        TodosLosDias\n        CadaDosDias\n        CadaTresDias\n        CadaCuatroDias\n        CadaCincoDias\n    }\n}\n`\nconst {data, loading,error} = useQuery(FRECUENCIAUSOINTERNET);\nconst someQueryResult = client.readQuery({ query: FRECUENCIAUSOINTERNET });\nif(someQueryResult){\n  console.log(someQueryResult)\n  console.log(\"si hay datos\")\n}\n\nif(loading){\n  \n  return (\n    \n            <div className=\"divHijo\">\n                 <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n            </div>\n \n  )\n} \nelse{\n    //Graficas\n    const datosGrafica = [\n        { name: 'Todos los días', value: data.obtenerFrecuenciaUsoInternet.TodosLosDias },\n        { name: 'Cada dos días', value: data.obtenerFrecuenciaUsoInternet.CadaDosDias },\n        { name: 'Cada tres días', value: data.obtenerFrecuenciaUsoInternet.CadaTresDias },\n        { name: 'Cada cuatro días', value:data.obtenerFrecuenciaUsoInternet.CadaCuatroDias},\n      ];\n    //Obtener tamanio contenedor\n    const COLORS = ['#94b8b8', '#00C49F', '#FFBB28', '#FF8042'];\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({\n        cx, cy, midAngle, innerRadius, outerRadius, percent,\n      }) => {\n         const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      \n        return (\n          <text style={{\n              fontSize:'70%',  \n            }}\n           x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(1)}%`}\n          </text>\n        );\n      };\n\n    return (\n              <ResponsiveContainer width={'100%'} height={\"100%\"}>\n                 <PieChart width={'50%'} height={\"50%\"}>\n                    <Pie\n                        data={datosGrafica}\n                        cx={\"50%\"}\n                        cy={\"50%\"}\n                        labelLine={false}\n                        label={renderCustomizedLabel}\n                        outerRadius={\"100%\"}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                    >\n                        {\n                        datosGrafica.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                        }\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n    )\n}\n}\nexport default PieFrecuencia\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra.jsx",["342","343"],"\nimport React from 'react';\nimport {useQuery,gql} from '@apollo/client'\nimport {Spinner} from 'reactstrap'\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Cell, ResponsiveContainer\n} from 'recharts';\nconst MOTIVONOCOMPRA = gql `\nquery obtenerMotivoNoCompra{\n    obtenerMotivoNoCompra{\n      PrefieroVerLoQueCompro\n      MiedoEntregarInfPer\n      MiedoSerEstafadoEnganiado\n      DesconfianzaFormaDePago\n    }\n  }\n`\n\nconst MotivoNoCompra = () => {\n\n    \n    const {data, loading,error} = useQuery(MOTIVONOCOMPRA);\n    if(loading)\n    {\n      return (\n                <div className=\"divHijo\">\n                    <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                </div>\n  )\n    }\n    else{\n      \n    const datosBar = [\n      {\n          motivo: 'Prefiero ver lo que compro',  valor: ((data.obtenerMotivoNoCompra.PrefieroVerLoQueCompro* 100)/1279)/2\n      },\n      {\n          motivo: 'Miedo a entregar información personal', valor: ((data.obtenerMotivoNoCompra.MiedoEntregarInfPer*100)/1279)/2 \n      },\n      {\n          motivo: 'Miedo a ser estafado o engañado',  valor: ((data.obtenerMotivoNoCompra.MiedoSerEstafadoEnganiado*100)/1279)/2\n      },\n      {\n          motivo: 'Desconfianza en la forma de pago',  valor: ((data.obtenerMotivoNoCompra.DesconfianzaFormaDePago*100)/1279)/2\n      },\n      ];\n  \n      const CustomLabel  = () =>{   \n              return (\n                <g>\n                  <foreignObject x={15} y=\"40%\" width={100} height={100}>\n                    <div>%</div>\n                  </foreignObject>\n                </g>\n              );\n      };\n      return (\n        <ResponsiveContainer width={\"99%\"} height={\"100%\"}>\n            <BarChart\n              width={\"50%\"}\n              height={\"50%\"}\n              data={datosBar}\n              margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n              }}\n              barSize={40}\n            >\n              <XAxis dataKey=\"motivo\" fontSize=\"0\" scale=\"point\" padding={{ left: 40, right: 40 }} />\n              <YAxis label={CustomLabel}/> \n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Bar padding={{left:30}} dataKey=\"valor\" fill=\"#8884d8\" background={{ fill: '#eee' }} />\n            </BarChart>\n        </ResponsiveContainer>\n      )\n    }\n}\n\nexport default MotivoNoCompra\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2018.jsx",["344"],"import React from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport {Spinner} from 'reactstrap'\nimport client from '../../../config/apollo.js'\n//Graficas en tiempo real\nimport {\n    PieChart, Pie,Cell,ResponsiveContainer\n  } from 'recharts';\nimport \".././PieChart.css\"\nconst PieFrecuencia2018 = () => {\n    const FRECUENCIAUSOINTERNET2018 = gql `\nquery obtenerFrecuenciaUsoInternet2018{\n    obtenerFrecuenciaUsoInternet2018{\n        TodosLosDias\n        CadaDosDias\n        CadaTresDias\n        CadaCuatroDias\n        CadaCincoDias\n    }\n}\n`\nconst {data, loading,error} = useQuery(FRECUENCIAUSOINTERNET2018);\nconst someQueryResult = client.readQuery({ query: FRECUENCIAUSOINTERNET2018 });\nif(someQueryResult){\n  console.log(someQueryResult)\n  console.log(\"si hay datos\")\n}\n\nif(loading){\n  \n  return (\n    \n            <div className=\"divHijo\">\n                 <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n            </div>\n \n  )\n} \nelse{\n    //Graficas\n    const datosGrafica = [\n        { name: 'Todos los días', value: data.obtenerFrecuenciaUsoInternet2018.TodosLosDias },\n        { name: 'Cada dos días', value: data.obtenerFrecuenciaUsoInternet2018.CadaDosDias },\n        { name: 'Cada tres días', value: data.obtenerFrecuenciaUsoInternet2018.CadaTresDias },\n        { name: 'Cada cuatro días', value:data.obtenerFrecuenciaUsoInternet2018.CadaCuatroDias},\n      ];\n    //Obtener tamanio contenedor\n    const COLORS = ['#94b8b8', '#00C49F', '#FFBB28', '#FF8042'];\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({\n        cx, cy, midAngle, innerRadius, outerRadius, percent,\n      }) => {\n         const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      \n        return (\n          <text style={{\n              fontSize:'70%',  \n            }}\n           x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(1)}%`}\n          </text>\n        );\n      };\n\n    return (\n              <ResponsiveContainer width={'99%'} height={\"100%\"}>\n                 <PieChart width={400} height={400}>\n                    <Pie\n                        data={datosGrafica}\n                        cx={\"50%\"}\n                        cy={\"50%\"}\n                        labelLine={false}\n                        label={renderCustomizedLabel}\n                        outerRadius={\"100%\"}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                    >\n                        {\n                        datosGrafica.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                        }\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n    )\n}\n}\n\nexport default PieFrecuencia2018\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2020.jsx",["345","346"],"import React from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport {Spinner} from 'reactstrap'\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Cell, ResponsiveContainer\n} from 'recharts';\nconst MOTIVONOCOMPRA2020 = gql `\nquery obtenerMotivoNoCompra2020{\n    obtenerMotivoNoCompra2020{\n      PrefieroVerLoQueCompro\n      MiedoEntregarInfPer\n      MiedoSerEstafadoEnganiado\n      DesconfianzaFormaDePago\n    }\n  }\n`\n\nconst MotivoNoCompra2020 = () => {\n   \n    const {data, loading,error} = useQuery(MOTIVONOCOMPRA2020);\n    if(loading)\n    {\n      return (\n                <div className=\"divHijo\">\n                    <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                </div>\n  )\n    }\n    else{\n      \n    const datosBar = [\n      {\n          motivo: 'Prefiero ver lo que compro',  valor: ((data.obtenerMotivoNoCompra2020.PrefieroVerLoQueCompro* 100)/1279)/2\n      },\n      {\n          motivo: 'Miedo a entregar información personal', valor: ((data.obtenerMotivoNoCompra2020.MiedoEntregarInfPer*100)/1279)/2 \n      },\n      {\n          motivo: 'Miedo a ser estafado o engañado',  valor: ((data.obtenerMotivoNoCompra2020.MiedoSerEstafadoEnganiado*100)/1279)/2\n      },\n      {\n          motivo: 'Desconfianza en la forma de pago',  valor: ((data.obtenerMotivoNoCompra2020.DesconfianzaFormaDePago*100)/1279)/2\n      },\n      ];\n  \n      const CustomLabel  = () =>{   \n              return (\n                <g>\n                  <foreignObject x={15} y=\"40%\" width={100} height={100}>\n                    <div>%</div>\n                  </foreignObject>\n                </g>\n              );\n      };\n      return (\n        <ResponsiveContainer width=\"99%\" height={\"100%\"}>\n            <BarChart\n              width={400}\n              height={400}\n              data={datosBar}\n              margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n              }}\n              barSize={40}\n            >\n              <XAxis dataKey=\"motivo\" fontSize=\"0\" scale=\"point\" padding={{ left: 40, right: 40 }} />\n              <YAxis label={CustomLabel}/> \n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Bar padding={{left:30}} dataKey=\"valor\" fill=\"#8884d8\" background={{ fill: '#eee' }} />\n            </BarChart>\n        </ResponsiveContainer>\n      )\n    }\n}\n\nexport default MotivoNoCompra2020\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2020.jsx",["347"],"import React from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport {Spinner} from 'reactstrap'\nimport client from '../../../config/apollo.js'\n//Graficas en tiempo real\nimport {\n    PieChart, Pie,Cell,ResponsiveContainer\n  } from 'recharts';\nimport \"../PieChart.css\"\nconst CompraNoCompra2020 = () => {\n    const COMPRANOCOMPRA2020 = gql `\n    query obtenerCompraNoCompra2020{\n        obtenerCompraNoCompra2020{\n            compra\n            noCompra\n        }\n    }\n    `\n    const {data, loading,error} = useQuery(COMPRANOCOMPRA2020);\n    const someQueryResult = client.readQuery({ query: COMPRANOCOMPRA2020 });\n    if(someQueryResult){\n      console.log(someQueryResult)\n      console.log(\"si hay datos\")\n    }\n    \n    if(loading){\n      \n      return (\n        \n                <div className=\"divHijo\">\n                     <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                </div>\n     \n      )\n    } \n    else{\n        //Graficas\n        const datosGrafica = [\n            { name: 'Compran por internet', value: data.obtenerCompraNoCompra2020.compra },\n            { name: 'No compran por internet', value: data.obtenerCompraNoCompra2020.noCompra }\n          ];\n        //Obtener tamanio contenedor\n        const COLORS = ['#94b8b8', '#00C49F', '#FFBB28', '#FF8042'];\n        const RADIAN = Math.PI / 180;\n        const renderCustomizedLabel = ({\n            cx, cy, midAngle, innerRadius, outerRadius, percent,\n          }) => {\n             const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n          \n            return (\n              <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n                {`${(percent * 100).toFixed(0)}%`}\n              </text>\n            );\n          };\n    \n    return (\n        <>\n            <ResponsiveContainer width={'99%'} height={'100%'}>\n                 <PieChart width={400} height={400}>\n                    <Pie\n                        data={datosGrafica}\n                        cx={\"50%\"}\n                        cy={\"50%\"}\n                        labelLine={false}\n                        label={renderCustomizedLabel}\n                        outerRadius={\"100%\"}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                    >\n                        {\n                        datosGrafica.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                        }\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n        </>\n        )\n    }\n}\n\nexport default CompraNoCompra2020\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra.jsx",["348"],"import React from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport {Spinner} from 'reactstrap'\nimport client from '../../../config/apollo.js'\n//Graficas en tiempo real\nimport {\n    PieChart, Pie,Cell,ResponsiveContainer\n  } from 'recharts';\nimport \"../PieChart.css\"\nconst CompraNoCompra = () => {\n    const COMPRANOCOMPRA = gql `\n    query obtenerCompraNoCompra{\n        obtenerCompraNoCompra{\n            compra\n            noCompra\n        }\n    }\n    `\n    const {data, loading,error} = useQuery(COMPRANOCOMPRA);\n    const someQueryResult = client.readQuery({ query: COMPRANOCOMPRA });\n    if(someQueryResult){\n      console.log(someQueryResult)\n      console.log(\"si hay datos\")\n    }\n    \n    if(loading){\n      \n      return (\n        \n                <div className=\"divHijo\">\n                     <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                </div>\n     \n      )\n    } \n    else{\n        //Graficas\n        const datosGrafica = [\n            { name: 'Compran por internet', value: data.obtenerCompraNoCompra.compra },\n            { name: 'No compran por internet', value: data.obtenerCompraNoCompra.noCompra }\n          ];\n        //Obtener tamanio contenedor\n        const COLORS = ['#94b8b8', '#00C49F', '#FFBB28', '#FF8042'];\n        const RADIAN = Math.PI / 180;\n        const renderCustomizedLabel = ({\n            cx, cy, midAngle, innerRadius, outerRadius, percent,\n          }) => {\n             const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n          \n            return (\n              <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n                {`${(percent * 100).toFixed(0)}%`}\n              </text>\n            );\n          };\n    \n    return (\n        <>\n            <ResponsiveContainer width={'100%'} height={'100%'}>\n                 <PieChart width={400} height={400}>\n                    <Pie\n                        data={datosGrafica}\n                        cx={\"50%\"}\n                        cy={\"50%\"}\n                        labelLine={false}\n                        label={renderCustomizedLabel}\n                        outerRadius={\"100%\"}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                    >\n                        {\n                        datosGrafica.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                        }\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n        </>\n        )\n    }\n}\n\nexport default CompraNoCompra\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2018.jsx",["349"],"import React from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport {Spinner} from 'reactstrap'\nimport client from '../../../config/apollo.js'\n//Graficas en tiempo real\nimport {\n    PieChart, Pie,Cell,ResponsiveContainer\n  } from 'recharts';\nimport \"../PieChart.css\"\nconst CompraNoCompra2018 = () => {\n    const COMPRANOCOMPRA2018 = gql `\n    query obtenerCompraNoCompra2018{\n        obtenerCompraNoCompra2018{\n            compra\n            noCompra\n        }\n    }\n    `\n    const {data, loading,error} = useQuery(COMPRANOCOMPRA2018);\n    const someQueryResult = client.readQuery({ query: COMPRANOCOMPRA2018 });\n    if(someQueryResult){\n      console.log(someQueryResult)\n      console.log(\"si hay datos\")\n    }\n    \n    if(loading){\n      \n      return (\n        \n                <div className=\"divHijo\">\n                     <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                </div>\n     \n      )\n    } \n    else{\n        //Graficas\n        const datosGrafica = [\n            { name: 'Compran por internet', value: data.obtenerCompraNoCompra2018.compra },\n            { name: 'No compran por internet', value: data.obtenerCompraNoCompra2018.noCompra }\n          ];\n        //Obtener tamanio contenedor\n        const COLORS = ['#94b8b8', '#00C49F', '#FFBB28', '#FF8042'];\n        const RADIAN = Math.PI / 180;\n        const renderCustomizedLabel = ({\n            cx, cy, midAngle, innerRadius, outerRadius, percent,\n          }) => {\n             const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n          \n            return (\n              <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n                {`${(percent * 100).toFixed(0)}%`}\n              </text>\n            );\n          };\n    \n    return (\n        <>\n            <ResponsiveContainer width={'100%'} height={'100%'}>\n                 <PieChart width={400} height={400}>\n                    <Pie\n                        data={datosGrafica}\n                        cx={\"50%\"}\n                        cy={\"50%\"}\n                        labelLine={false}\n                        label={renderCustomizedLabel}\n                        outerRadius={\"100%\"}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                    >\n                        {\n                        datosGrafica.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                        }\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n        </>\n        )\n    }\n}\n\nexport default CompraNoCompra2018\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2018.jsx",["350","351"],"import React from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport {Spinner} from 'reactstrap'\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Cell, ResponsiveContainer\n} from 'recharts';\nconst MOTIVONOCOMPRA2018 = gql `\nquery obtenerMotivoNoCompra2018{\n    obtenerMotivoNoCompra2018{\n      PrefieroVerLoQueCompro\n      MiedoEntregarInfPer\n      MiedoSerEstafadoEnganiado\n      DesconfianzaFormaDePago\n    }\n  }\n`\n\nconst MotivoNoCompra2018 = () => {\n   \n    const {data, loading,error} = useQuery(MOTIVONOCOMPRA2018);\n    if(loading)\n    {\n      return (\n                <div className=\"divHijo\">\n                    <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                </div>\n  )\n    }\n    else{\n      \n    const datosBar = [\n      {\n          motivo: 'Prefiero ver lo que compro',  valor: ((data.obtenerMotivoNoCompra2018.PrefieroVerLoQueCompro* 100)/1279)/2\n      },\n      {\n          motivo: 'Miedo a entregar información personal', valor: ((data.obtenerMotivoNoCompra2018.MiedoEntregarInfPer*100)/1279)/2 \n      },\n      {\n          motivo: 'Miedo a ser estafado o engañado',  valor: ((data.obtenerMotivoNoCompra2018.MiedoSerEstafadoEnganiado*100)/1279)/2\n      },\n      {\n          motivo: 'Desconfianza en la forma de pago',  valor: ((data.obtenerMotivoNoCompra2018.DesconfianzaFormaDePago*100)/1279)/2\n      },\n      ];\n  \n      const CustomLabel  = () =>{   \n              return (\n                <g>\n                  <foreignObject x={15} y=\"40%\" width={100} height={100}>\n                    <div>%</div>\n                  </foreignObject>\n                </g>\n              );\n      };\n      return (\n        <ResponsiveContainer width=\"99%\" height={\"100%\"}>\n            <BarChart\n              width={400}\n              height={400}\n              data={datosBar}\n              margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n              }}\n              barSize={40}\n            >\n              <XAxis dataKey=\"motivo\" fontSize=\"0\" scale=\"point\" padding={{ left: 40, right: 40 }} />\n              <YAxis label={CustomLabel}/> \n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Bar padding={{left:30}} dataKey=\"valor\" fill=\"#8884d8\" background={{ fill: '#eee' }} />\n            </BarChart>\n        </ResponsiveContainer>\n      )\n    }\n}\n\nexport default MotivoNoCompra2018\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar.jsx",["352","353","354"],"import React from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport { ComposedChart,Line,Area,Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\nimport {Spinner} from 'reactstrap'\nimport './VerticalChart.css'\nconst VerticalChartMotivacionComprar = () => {\n    const MOTIVACIONCOMPRAR = gql`\n    query obtenerMotivacionCompra{\n        obtenerMotivacionCompra{\n          garantiaDevolucionCambio\n          garantiaConfidencialidadInformacion\n          informacionComoComprar\n          atencionClienteDuranteCompra\n          asistenciaDuranteProceso\n          bajoCostoEnvio\n          puntualidadEntrega\n          variedadOfertas\n          tutoriales\n          otras\n        }\n      }\n    `\n\n    const {data, loading,error} = useQuery(MOTIVACIONCOMPRAR);\n    \n    if(loading){\n      \n        return (\n          \n                  <div className=\"divHijo\">\n                       <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                  </div>\n       \n        )\n      } \n      else{\n          //Graficas\n          const datosVertical = [\n              { name: 'Garantía de devolución de cambio', valor: data.obtenerMotivacionCompra.garantiaDevolucionCambio },\n              { name: 'Garantía de confidencialidad', valor: data.obtenerMotivacionCompra.garantiaConfidencialidadInformacion },\n              { name: 'Más información de cómo comprar', valor: data.obtenerMotivacionCompra.informacionComoComprar },\n              { name: 'Atención al cliente durante la compra', valor: data.obtenerMotivacionCompra.atencionClienteDuranteCompra },\n              { name: 'Asistencia durante el proceso', valor: data.obtenerMotivacionCompra.asistenciaDuranteProceso },\n              { name: 'Bajos costos de envío', valor: data.obtenerMotivacionCompra.bajoCostoEnvio },\n              { name: 'Puntualidad de entrega', valor: data.obtenerMotivacionCompra.puntualidadEntrega },\n              { name: 'Mayor variedad de ofertas', valor: data.obtenerMotivacionCompra.variedadOfertas },\n              { name: 'Tutoriales o inducción para comprar', valor: data.obtenerMotivacionCompra.tutoriales },\n              { name: 'Otras', valor: data.obtenerMotivacionCompra.otras }\n            ];\n\n         \n      return (\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <ComposedChart\n                    layout=\"vertical\"\n                    width={\"50%\"}\n                    height={\"50%\"}\n                    data={datosVertical}\n                    margin={{\n                        top: 10,\n                        right: 50,\n                        bottom: 20,\n                        left: 50,\n                    }}\n                    fontSize={'15.5'}\n                >\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <XAxis type=\"number\" />\n                <YAxis dataKey=\"name\" type=\"category\" scale=\"band\" width={200}/>\n                <Tooltip className=\"widthResponsive\"/>\n                <Legend />\n                <Bar dataKey=\"valor\" barSize={20} fill=\"#413ea0\" />\n                </ComposedChart>\n            </ResponsiveContainer>\n          \n          )\n      }\n}\n\nexport default VerticalChartMotivacionComprar\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2020.jsx",["355","356","357"],"import React from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport { ComposedChart,Line,Area,Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\nimport {Spinner} from 'reactstrap'\n    \nconst VerticalChartMotivacionComprar2020 = () => {\n    const MOTIVACIONCOMPRAR2020 = gql`\n    query obtenerMotivacionCompra2020{\n            obtenerMotivacionCompra2020{\n                  tenerInformacionGuiaTutorialesCompra \n                  tenerGarantiasEntregaPago \n                  tenerAsistenciaAtencion\n                  facilidadPago \n                  formasPago \n                  tutorialesInduccionParaRealizarCompra \n                  variedadOferta \n                  mejorPrecio \n                  otras \n            }\n      }\n    `\n\n    const {data, loading,error} = useQuery(MOTIVACIONCOMPRAR2020);\n    \n    if(loading){\n      \n        return (\n          \n                  <div className=\"divHijo\">\n                       <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                  </div>\n       \n        )\n      } \n      else{\n          //Graficas\n          const datosVertical = [\n              { name: 'Informacion y guía para la compra', valor: data.obtenerMotivacionCompra2020.tenerInformacionGuiaTutorialesCompra  },\n              { name: 'Garantías de entrega y pago', valor: data.obtenerMotivacionCompra2020.tenerGarantiasEntregaPago },\n              { name: 'Asistencia en la compra', valor: data.obtenerMotivacionCompra2020.tenerAsistenciaAtencion },\n              { name: 'Facilidad de pago', valor: data.obtenerMotivacionCompra2020.facilidadPago  },\n              { name: 'Formas de pago accesibles', valor: data.obtenerMotivacionCompra2020.formasPago },\n              { name: 'Tutoriales e inducción para realizar la compra', valor: data.obtenerMotivacionCompra2020.tutorialesInduccionParaRealizarCompra },\n              { name: 'Mayor variedad de ofertas', valor: data.obtenerMotivacionCompra2020.variedadOferta },\n              { name: 'Mejor precio', valor: data.obtenerMotivacionCompra2020.mejorPrecio },\n              { name: 'Otras', valor: data.obtenerMotivacionCompra2020.otras }\n            ];\n\n         \n      return (\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <ComposedChart\n                    layout=\"vertical\"\n                    width={500}\n                    height={400}\n                    data={datosVertical}\n                    margin={{\n                        top: 10,\n                        right: 50,\n                        bottom: 20,\n                        left: 50,\n                    }}\n                    fontSize={15.5}\n                >\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <XAxis type=\"number\" />\n                <YAxis dataKey=\"name\" type=\"category\" scale=\"band\" width={200}/>\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"valor\" barSize={20} fill=\"#413ea0\" />\n                </ComposedChart>\n            </ResponsiveContainer>\n          \n          )\n      }\n}\n\nexport default VerticalChartMotivacionComprar2020\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2018.jsx",["358","359","360"],"import React from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport { ComposedChart,Line,Area,Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\nimport {Spinner} from 'reactstrap'\n    \nconst VerticalChartMotivacionComprar2018 = () => {\n    const MOTIVACIONCOMPRAR2018 = gql`\n    query obtenerMotivacionCompra2018{\n        obtenerMotivacionCompra2018{\n          garantiaDevolucionCambio\n          garantiaConfidencialidadInformacion\n          informacionComoComprar\n          atencionClienteDuranteCompra\n          asistenciaDuranteProceso\n          bajoCostoEnvio\n          puntualidadEntrega\n          variedadOfertas\n          tutoriales\n          otras\n        }\n      }\n    `\n\n    const {data, loading,error} = useQuery(MOTIVACIONCOMPRAR2018);\n    \n    if(loading){\n      \n        return (\n          \n                  <div className=\"divHijo\">\n                       <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                  </div>\n       \n        )\n      } \n      else{\n          //Graficas\n          const datosVertical = [\n              { name: 'Garantía de devolución de cambio', valor: data.obtenerMotivacionCompra2018.garantiaDevolucionCambio },\n              { name: 'Garantía de confidencialidad', valor: data.obtenerMotivacionCompra2018.garantiaConfidencialidadInformacion },\n              { name: 'Más información de cómo comprar', valor: data.obtenerMotivacionCompra2018.informacionComoComprar },\n              { name: 'Atención al cliente durante la compra', valor: data.obtenerMotivacionCompra2018.atencionClienteDuranteCompra },\n              { name: 'Asistencia durante el proceso', valor: data.obtenerMotivacionCompra2018.asistenciaDuranteProceso },\n              { name: 'Bajos costos de envío', valor: data.obtenerMotivacionCompra2018.bajoCostoEnvio },\n              { name: 'Puntualidad de entrega', valor: data.obtenerMotivacionCompra2018.puntualidadEntrega },\n              { name: 'Mayor variedad de ofertas', valor: data.obtenerMotivacionCompra2018.variedadOfertas },\n              { name: 'Tutoriales o inducción para comprar', valor: data.obtenerMotivacionCompra2018.tutoriales },\n              { name: 'Otras', valor: data.obtenerMotivacionCompra2018.otras }\n            ];\n\n         \n      return (\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <ComposedChart\n                    layout=\"vertical\"\n                    width={500}\n                    height={400}\n                    data={datosVertical}\n                    margin={{\n                        top: 10,\n                        right: 50,\n                        bottom: 20,\n                        left: 50,\n                    }}\n                    fontSize={15.5}\n                >\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <XAxis type=\"number\" />\n                <YAxis dataKey=\"name\" type=\"category\" scale=\"band\" width={200}/>\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"valor\" barSize={20} fill=\"#413ea0\" />\n                </ComposedChart>\n            </ResponsiveContainer>\n          \n          )\n      }\n}\n\nexport default VerticalChartMotivacionComprar2018\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Playground\\GraphQLPlayground\\PlaygroundIde.jsx",[],"D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\Playground\\RestPlayground\\PlaygroundRest.jsx",["361","362"],"import React, { useState} from 'react'\nimport '../RestPlayground/PlaygroundRest.css'\nimport axios from 'axios'\nconst PlaygroundRest = () => {\n    //Booleanos State\n    const [frecuencia, setFrecuencia] = useState(false)\n    const [motivoNoCompra, setMotivoNoCompra] = useState(false)\n   //State Api\n   const [datosFrecuencia, setDatosFrecuencia] = useState('')\n   const [datosMotivoNoCompra, setDatosMotivoNoCompra] =useState([])\n   \n    //Booleanos funciones\n    const setEndpointFrecuenciaUsoInternet = ()=>{\n        setFrecuencia(!frecuencia)\n        setMotivoNoCompra(false)\n        console.log('uno')\n    }\n    const setEndpointMotivoNoCompra = ()=>{\n        setMotivoNoCompra(!motivoNoCompra)\n        setFrecuencia(false)\n        console.log('dos')\n    }\n    //DOM\n    const funcFrecuencia= ()=>{\n        console.log('ingresa')\n        //useEffect(() => {    \n            axios.get(\"https://salty-fjord-38974.herokuapp.com/api/frecuenciaUsoInternet/\")\n            .then(result=>{\n                console.log(result)\n                const nuevo = JSON.stringify(result.data)\n                setDatosFrecuencia(nuevo)\n            }\n            ).catch(console.log() )\n      //  }, [])\n            return (\n                <div className='datosFrecuencia'>{datosFrecuencia}</div>\n            )\n    }\n    const funcMotivoNoCompra= ()=>{\n        console.log('ingresa')\n        //useEffect(() => {    \n            axios.get(\"https://salty-fjord-38974.herokuapp.com/api/motivoNoCompra/\")\n            .then(result=>{\n                console.log(result)\n                const nuevo = JSON.stringify(result.data)\n                setDatosMotivoNoCompra(nuevo)\n            }\n            ).catch(console.log() )\n      //  }, [])\n            return (\n                <div className='datosFrecuencia' >{datosMotivoNoCompra}</div>\n            )\n    }\n\n    return (\n        <>\n        <div style={{\n            display:'flex',\n            width:'100%',\n            height:'89.3vh',\n            flexDirection:'column'\n        }}>\n            <div style={{\n                display:'flex',\n                width:'100%',\n                height:'50%',\n                alignItems:'center',\n                justifyContent:'center',\n                }}>\n                <div className='dropdown' style={{marginTop:'-10%'}}> \n                    <button className='dropbtn'>Endpoints Api Rest</button>\n                    <div className=\"dropdown-content\">\n                            <a onClick={setEndpointFrecuenciaUsoInternet} >/api/frecuenciaUsoInternet/</a>\n                            <a onClick={setEndpointMotivoNoCompra } >api/motivoNoCompra/</a>\n                    </div>                    \n                </div>\n                <div style={{\n                    marginLeft:'15vw'\n                }}>Endpoint: https://salty-fjord-38974.herokuapp.com/</div>\n            </div>\n            <div style={{\n                display:'flex',\n                width:'100%',\n                height:'50%',\n                alignItems:'center',\n                justifyContent:'center',\n                }}>\n                {\n                    frecuencia && !motivoNoCompra ? funcFrecuencia() : null\n                }  \n\n                \n                {\n                    motivoNoCompra && !frecuencia ? funcMotivoNoCompra() : null\n                }  \n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default PlaygroundRest\n","D:\\Programming\\Trabajo\\CCE\\Code GraphQL\\CCEClient-master\\src\\components\\DropDown\\MenuItems.js",[],{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","severity":1,"message":"368","line":49,"column":12,"nodeType":"369","endLine":49,"endColumn":14,"suggestions":"370"},{"ruleId":"371","severity":1,"message":"372","line":25,"column":18,"nodeType":"373","messageId":"374","endLine":25,"endColumn":25},{"ruleId":"371","severity":1,"message":"375","line":25,"column":27,"nodeType":"373","messageId":"374","endLine":25,"endColumn":32},{"ruleId":"363","replacedBy":"376"},{"ruleId":"365","replacedBy":"377"},{"ruleId":"371","severity":1,"message":"378","line":18,"column":9,"nodeType":"373","messageId":"374","endLine":18,"endColumn":31},{"ruleId":"363","replacedBy":"379"},{"ruleId":"365","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":36,"column":37,"nodeType":"383","endLine":36,"endColumn":49},{"ruleId":"371","severity":1,"message":"384","line":3,"column":24,"nodeType":"373","messageId":"374","endLine":3,"endColumn":28},{"ruleId":"371","severity":1,"message":"385","line":3,"column":29,"nodeType":"373","messageId":"374","endLine":3,"endColumn":33},{"ruleId":"371","severity":1,"message":"375","line":24,"column":26,"nodeType":"373","messageId":"374","endLine":24,"endColumn":31},{"ruleId":"363","replacedBy":"386"},{"ruleId":"365","replacedBy":"387"},{"ruleId":"371","severity":1,"message":"388","line":5,"column":63,"nodeType":"373","messageId":"374","endLine":5,"endColumn":67},{"ruleId":"371","severity":1,"message":"375","line":20,"column":26,"nodeType":"373","messageId":"374","endLine":20,"endColumn":31},{"ruleId":"381","severity":1,"message":"382","line":37,"column":33,"nodeType":"383","endLine":37,"endColumn":45},{"ruleId":"381","severity":1,"message":"389","line":73,"column":29,"nodeType":"383","endLine":73,"endColumn":76},{"ruleId":"381","severity":1,"message":"389","line":74,"column":29,"nodeType":"383","endLine":74,"endColumn":70},{"ruleId":"363","replacedBy":"390"},{"ruleId":"365","replacedBy":"391"},{"ruleId":"381","severity":1,"message":"382","line":38,"column":29,"nodeType":"383","endLine":38,"endColumn":41},{"ruleId":"371","severity":1,"message":"375","line":22,"column":22,"nodeType":"373","messageId":"374","endLine":22,"endColumn":27},{"ruleId":"371","severity":1,"message":"375","line":19,"column":26,"nodeType":"373","messageId":"374","endLine":19,"endColumn":31},{"ruleId":"371","severity":1,"message":"384","line":3,"column":24,"nodeType":"373","messageId":"374","endLine":3,"endColumn":28},{"ruleId":"371","severity":1,"message":"385","line":3,"column":29,"nodeType":"373","messageId":"374","endLine":3,"endColumn":33},{"ruleId":"371","severity":1,"message":"375","line":23,"column":26,"nodeType":"373","messageId":"374","endLine":23,"endColumn":31},{"ruleId":"371","severity":1,"message":"384","line":3,"column":24,"nodeType":"373","messageId":"374","endLine":3,"endColumn":28},{"ruleId":"371","severity":1,"message":"385","line":3,"column":29,"nodeType":"373","messageId":"374","endLine":3,"endColumn":33},{"ruleId":"371","severity":1,"message":"375","line":24,"column":26,"nodeType":"373","messageId":"374","endLine":24,"endColumn":31},{"ruleId":"363","replacedBy":"392"},{"ruleId":"365","replacedBy":"393"},{"ruleId":"371","severity":1,"message":"388","line":6,"column":63,"nodeType":"373","messageId":"374","endLine":6,"endColumn":67},{"ruleId":"371","severity":1,"message":"375","line":22,"column":26,"nodeType":"373","messageId":"374","endLine":22,"endColumn":31},{"ruleId":"371","severity":1,"message":"375","line":19,"column":26,"nodeType":"373","messageId":"374","endLine":19,"endColumn":31},{"ruleId":"371","severity":1,"message":"375","line":19,"column":26,"nodeType":"373","messageId":"374","endLine":19,"endColumn":31},{"ruleId":"371","severity":1,"message":"375","line":22,"column":22,"nodeType":"373","messageId":"374","endLine":22,"endColumn":27},{"ruleId":"371","severity":1,"message":"388","line":5,"column":63,"nodeType":"373","messageId":"374","endLine":5,"endColumn":67},{"ruleId":"371","severity":1,"message":"375","line":20,"column":26,"nodeType":"373","messageId":"374","endLine":20,"endColumn":31},{"ruleId":"371","severity":1,"message":"375","line":22,"column":22,"nodeType":"373","messageId":"374","endLine":22,"endColumn":27},{"ruleId":"394","severity":1,"message":"395","line":15,"column":33,"nodeType":"383","endLine":15,"endColumn":73},{"ruleId":"394","severity":1,"message":"395","line":31,"column":30,"nodeType":"383","endLine":31,"endColumn":71},{"ruleId":"363","replacedBy":"396"},{"ruleId":"365","replacedBy":"397"},{"ruleId":"371","severity":1,"message":"378","line":18,"column":9,"nodeType":"373","messageId":"374","endLine":18,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":15,"column":33,"nodeType":"383","endLine":15,"endColumn":73},{"ruleId":"394","severity":1,"message":"395","line":31,"column":30,"nodeType":"383","endLine":31,"endColumn":71},{"ruleId":"367","severity":1,"message":"368","line":49,"column":12,"nodeType":"369","endLine":49,"endColumn":14,"suggestions":"398"},{"ruleId":"371","severity":1,"message":"372","line":25,"column":18,"nodeType":"373","messageId":"374","endLine":25,"endColumn":25},{"ruleId":"371","severity":1,"message":"375","line":25,"column":27,"nodeType":"373","messageId":"374","endLine":25,"endColumn":32},{"ruleId":"381","severity":1,"message":"382","line":38,"column":29,"nodeType":"383","endLine":38,"endColumn":41},{"ruleId":"381","severity":1,"message":"382","line":36,"column":37,"nodeType":"383","endLine":36,"endColumn":49},{"ruleId":"381","severity":1,"message":"382","line":37,"column":33,"nodeType":"383","endLine":37,"endColumn":45},{"ruleId":"371","severity":1,"message":"375","line":22,"column":22,"nodeType":"373","messageId":"374","endLine":22,"endColumn":27},{"ruleId":"371","severity":1,"message":"375","line":22,"column":22,"nodeType":"373","messageId":"374","endLine":22,"endColumn":27},{"ruleId":"371","severity":1,"message":"388","line":6,"column":63,"nodeType":"373","messageId":"374","endLine":6,"endColumn":67},{"ruleId":"371","severity":1,"message":"375","line":22,"column":26,"nodeType":"373","messageId":"374","endLine":22,"endColumn":31},{"ruleId":"371","severity":1,"message":"375","line":22,"column":22,"nodeType":"373","messageId":"374","endLine":22,"endColumn":27},{"ruleId":"371","severity":1,"message":"388","line":5,"column":63,"nodeType":"373","messageId":"374","endLine":5,"endColumn":67},{"ruleId":"371","severity":1,"message":"375","line":20,"column":26,"nodeType":"373","messageId":"374","endLine":20,"endColumn":31},{"ruleId":"371","severity":1,"message":"375","line":19,"column":26,"nodeType":"373","messageId":"374","endLine":19,"endColumn":31},{"ruleId":"371","severity":1,"message":"375","line":19,"column":26,"nodeType":"373","messageId":"374","endLine":19,"endColumn":31},{"ruleId":"371","severity":1,"message":"375","line":19,"column":26,"nodeType":"373","messageId":"374","endLine":19,"endColumn":31},{"ruleId":"371","severity":1,"message":"388","line":5,"column":63,"nodeType":"373","messageId":"374","endLine":5,"endColumn":67},{"ruleId":"371","severity":1,"message":"375","line":20,"column":26,"nodeType":"373","messageId":"374","endLine":20,"endColumn":31},{"ruleId":"371","severity":1,"message":"384","line":3,"column":24,"nodeType":"373","messageId":"374","endLine":3,"endColumn":28},{"ruleId":"371","severity":1,"message":"385","line":3,"column":29,"nodeType":"373","messageId":"374","endLine":3,"endColumn":33},{"ruleId":"371","severity":1,"message":"375","line":24,"column":26,"nodeType":"373","messageId":"374","endLine":24,"endColumn":31},{"ruleId":"371","severity":1,"message":"384","line":3,"column":24,"nodeType":"373","messageId":"374","endLine":3,"endColumn":28},{"ruleId":"371","severity":1,"message":"385","line":3,"column":29,"nodeType":"373","messageId":"374","endLine":3,"endColumn":33},{"ruleId":"371","severity":1,"message":"375","line":23,"column":26,"nodeType":"373","messageId":"374","endLine":23,"endColumn":31},{"ruleId":"371","severity":1,"message":"384","line":3,"column":24,"nodeType":"373","messageId":"374","endLine":3,"endColumn":28},{"ruleId":"371","severity":1,"message":"385","line":3,"column":29,"nodeType":"373","messageId":"374","endLine":3,"endColumn":33},{"ruleId":"371","severity":1,"message":"375","line":24,"column":26,"nodeType":"373","messageId":"374","endLine":24,"endColumn":31},{"ruleId":"381","severity":1,"message":"389","line":73,"column":29,"nodeType":"383","endLine":73,"endColumn":76},{"ruleId":"381","severity":1,"message":"389","line":74,"column":29,"nodeType":"383","endLine":74,"endColumn":70},"no-native-reassign",["399"],"no-negated-in-lhs",["400"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'endRest'. Either include it or remove the dependency array.","ArrayExpression",["401"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["399"],["400"],"'setAbrirCerrarDropdown' is assigned a value but never used.",["399"],["400"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Line' is defined but never used.","'Area' is defined but never used.",["399"],["400"],"'Cell' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["399"],["400"],["399"],["400"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["399"],["400"],["402"],"no-global-assign","no-unsafe-negation",{"desc":"403","fix":"404"},{"desc":"403","fix":"405"},"Update the dependencies array to be: [endRest]",{"range":"406","text":"407"},{"range":"408","text":"407"},[1619,1621],"[endRest]",[1571,1573]]