[{"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\index.js":"1","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\App.js":"2","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\config\\apollo.js":"3","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas.js":"4","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\index.js":"5","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\restVsGraphQL2018.js":"6","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas2020.js":"7","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\contacto.js":"8","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas2018.js":"9","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\restVsGraphQL.js":"10","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\api.js":"11","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\apiRest.js":"12","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Navbar\\Navbar.jsx":"13","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Navbar\\NavbarElementos.js":"14","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\DropDown\\Dropdown.js":"15","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2018.jsx":"16","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia.jsx":"17","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2020.jsx":"18","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2020.jsx":"19","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2018.jsx":"20","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra.jsx":"21","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra.jsx":"22","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2020.jsx":"23","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2018.jsx":"24","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2020.jsx":"25","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar.jsx":"26","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartRestVsGraphQL\\BarChartGraphQL.jsx":"27","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2018.jsx":"28","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Playground\\RestPlayground\\PlaygroundRest.jsx":"29","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Playground\\GraphQLPlayground\\PlaygroundIde.jsx":"30","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\DropDown\\MenuItems.js":"31"},{"size":976,"mtime":1626134216323,"results":"32","hashOfConfig":"33"},{"size":2135,"mtime":1626029534614,"results":"34","hashOfConfig":"33"},{"size":639,"mtime":1621484124000,"results":"35","hashOfConfig":"33"},{"size":7646,"mtime":1625008134560,"results":"36","hashOfConfig":"33"},{"size":3149,"mtime":1621484124000,"results":"37","hashOfConfig":"33"},{"size":4958,"mtime":1626034557976,"results":"38","hashOfConfig":"33"},{"size":8148,"mtime":1621484124000,"results":"39","hashOfConfig":"33"},{"size":5769,"mtime":1621484124000,"results":"40","hashOfConfig":"33"},{"size":8040,"mtime":1621484124000,"results":"41","hashOfConfig":"33"},{"size":4937,"mtime":1626034176898,"results":"42","hashOfConfig":"33"},{"size":197,"mtime":1622386435116,"results":"43","hashOfConfig":"33"},{"size":205,"mtime":1622343367940,"results":"44","hashOfConfig":"33"},{"size":5137,"mtime":1626141801008,"results":"45","hashOfConfig":"33"},{"size":1560,"mtime":1621484124000,"results":"46","hashOfConfig":"33"},{"size":769,"mtime":1621484124000,"results":"47","hashOfConfig":"33"},{"size":3238,"mtime":1625280536703,"results":"48","hashOfConfig":"33"},{"size":3103,"mtime":1625778737511,"results":"49","hashOfConfig":"33"},{"size":2758,"mtime":1625006281043,"results":"50","hashOfConfig":"33"},{"size":3238,"mtime":1625280575529,"results":"51","hashOfConfig":"33"},{"size":2709,"mtime":1625003185326,"results":"52","hashOfConfig":"33"},{"size":2892,"mtime":1625282455043,"results":"53","hashOfConfig":"33"},{"size":2848,"mtime":1625003201881,"results":"54","hashOfConfig":"33"},{"size":2759,"mtime":1625282567201,"results":"55","hashOfConfig":"33"},{"size":2885,"mtime":1625282429163,"results":"56","hashOfConfig":"33"},{"size":3179,"mtime":1625283328683,"results":"57","hashOfConfig":"33"},{"size":3358,"mtime":1625282568576,"results":"58","hashOfConfig":"33"},{"size":1126,"mtime":1625004297972,"results":"59","hashOfConfig":"33"},{"size":3457,"mtime":1625282833695,"results":"60","hashOfConfig":"33"},{"size":30150,"mtime":1626234798384,"results":"61","hashOfConfig":"33"},{"size":357,"mtime":1621484124000,"results":"62","hashOfConfig":"33"},{"size":1052,"mtime":1621484124000,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"pw4laz",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\index.js",[],["140","141"],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\App.js",["142"],"import React,{useState} from 'react'\nimport Navbar from './components/Navbar/Navbar'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Home from './pages/index'\nimport restVsGraphQL from './pages/restVsGraphQL'\nimport restVsGraphQL2018 from './pages/restVsGraphQL2018'\nimport restVsGraphQL2020 from './pages/restVsGraphQL2018'\nimport despliegueEstadisticas from './pages/despliegueEstadisticas'\nimport despliegueEstadisticas2018 from './pages/despliegueEstadisticas2018'\nimport despliegueEstadisticas2020 from './pages/despliegueEstadisticas2020'\nimport contacto from './pages/contacto'\nimport api from './pages/api'\nimport apiRest from './pages/apiRest'\nimport './App.css'\n\n//CLIENT APOLLO\nimport client from './config/apollo'\nimport { ApolloProvider } from '@apollo/client'\n\n//Hace que apollo este disponible en todos los componentes de nuestra app\nconst App = () => {\n        const [dropdown, setDropdown] = useState(false)\n        const setAbrirCerrarDropdown = () => {\n          setDropdown(!dropdown)\n        }\n        \n        return (\n            \n            <Router>\n              <Navbar/>\n              <Switch>\n                <Route path=\"/\" exact component={Home}/>\n                \n                <Route path='/despliegueEstadisticas' component={despliegueEstadisticas}/>\n                <Route path='/despliegueEstadisticas2018' component={despliegueEstadisticas2018}/>\n                <Route path='/despliegueEstadisticas2020' component={despliegueEstadisticas2020}/>\n                <Route path='/contacto' component={contacto}/>\n                <Route path='/api' component={api}/>\n                <Route path='/apiRest' component={apiRest}/>\n\n                <ApolloProvider client={client}>\n                    <Route path='/restVsGraphQL' component={restVsGraphQL}/>  \n                    <Route path='/restVsGraphQL2018' component={restVsGraphQL2018}/>\n                    <Route path='/restVsGraphQL2020' component={restVsGraphQL2020}/>                   \n                </ApolloProvider>\n              </Switch>\n            </Router>\n      \n        );\n\n  }\n\nexport default App;\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\config\\apollo.js",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas.js",["143"],"import React from 'react'\nimport '../components/Spinner/spinnerStyle.css'\nimport PieFrecuencia from '../components/Charts/PieChartFrecuenciaCompra/PieFrecuencia'\nimport MotivoNoCompra from '../components/Charts/BarChartMotivoNoCompra/MotivoNoCompra'\nimport CompraNoCompra from '../components/Charts/PieChartCompraNoCompra/CompraNoCompra'\nimport MotivacionCompra from '../components/Charts/VerticalChart/VerticalChartMotivacionComprar'\nimport '../styles/despliegueEstadisticas.css'\n//ASSETS BACKGROUNDS\nimport BackgroundPortada from \"../assets/img/portadaEcommerceDark.jpg\"\n//ICONS\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faAngleRight} from '@fortawesome/free-solid-svg-icons'\nconst despliegueEstadisticas = () => {\n    return (\n        <>\n         {\n             //Portada\n         }\n         <div id=\"inicio\" style={{\n              display:\"flex\",\n              height:\"90vh\",\n              backgroundImage: `url(${BackgroundPortada} )`,\n              backgroundPosition: 'center',\n              backgroundSize: 'cover',\n              backgroundRepeat: 'no-repeat'\n         }}>\n             <div style={{\n                    display: 'flex',\n                    width:'100vw',\n                    height:'100vh',\n                    background: 'transparent',\n                    paddingTop: \"21vh\",\n                    fontWeight: \"bold\"\n                    }}>\n    \n                    <div className=\"iconNav\"><FontAwesomeIcon className='icon' icon={faAngleRight}/>    \n                    <ul className=\"nav\">\n                        <li><a href=\"#\">Glosario</a></li>\n                        <li><a href=\"#compraNoCompra\">Algunos datos del Ecuador</a></li>\n                        <li><a href=\"#frecuenciaUsoInternet\">Frecuencia de uso de Internet</a></li>\n                        <li><a href=\"#motivoNoCompra\">Razones para no comprar</a></li>\n                        <li><a href=\"#motivoCompra\">Motivaciones para comprar</a> </li>\n                    </ul>\n                    </div>\n                    <h2 className='titulo' >\n                          Antecedentes y situación del Ecommerce en el Ecuador</h2>\n            \n                </div>\n                <div style={{\n                    display: 'flex',\n                    width:'100vw',\n                    height:'90vh',\n                    background: 'transparent'\n                }}>\n                    \n                </div>\n             </div>\n        {\n             //Section 1: Porcentaje de compra\n         }\n         <div className=\"mainContainer\" id=\"compraNoCompra\" >\n              <div className=\"firstContainer\" >\n                \n                    <CompraNoCompra/>\n                \n                \n                <ul className=\"infoCompraNoCompra\" >\n                            <li>* El 86% indica el porcentaje de personas que no realizan comercio electrónico \n                                en un total de 1279 encuestas realizadas y el 14% las personas que si realizan \n                                comercio electrónico\n                            </li>\n                </ul>\n             </div>\n             <div className='mainContainerInfoChartMotivoNoCompra' >\n                    <div className='containerInfoChartMotivoNoCompra' >\n                        <h2 className='infoChartMotivoNoCompraTitulo' >Algunos datos del Ecuador</h2>\n                        <ul className='infoChartMotivoNoCompraContenido'>\n                            <li>Las empresas no escapan de este lento desarrollo de transacciones online \n                                puesto que menos del 20% de las empresas realizan comercio electrónico\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n         </div>\n\n\n\n        <div id=\"frecuenciaUsoInternet\" className='mainContainerFrecuenciaUsoInternet' >\n            \n            <div className='containerFrecuenciaUsoInternetChart' >\n                \n                <PieFrecuencia/>\n                <ul className=\"infoChartFrecuenciaUsoInternet\" >\n                            <li>* El 91% indica el porcentaje de personas que utilizan internet varias\n                                 veces al día, el 7% el porcentaje de personas que lo utilizan una o datos\n                                 veces al día, el 1.3% cada dos o tres días y el 0.3% representa una vez a \n                                 la semana\n                            </li>\n                        </ul>\n             </div>\n                <div className='mainContainerFrecuenciaUsoInternetInfo'>\n                    <div className='containerFrecuenciaUsoInternetInfo' >\n                        <h2 className=\"frecuenciaUsoInternetInfoTitulo\" >\n                            Frecuencia de Uso de Internet</h2>\n                        <ul className='frecuenciaUsoInternetInfoContenido'>\n                            <li>Internet se ha vuelto \n                        imprescindible en las actividades \n                        diarias, por eso su consulta es \n                        constante. Estar “online” en \n                        aplicaciones para comunicarse y \n                        redes sociales, le da a los \n                        usuarios el don de la ubicuidad \n                        virtual con un solo click</li>\n                            \n                        </ul>\n                    </div>\n                </div>\n            \n         </div>\n         {\n             //Section 3\n         }\n         <div id=\"motivoNoCompra\" className='mainContainerMotivoNoCompra' >\n              <div className=\"containerMotivoNoCompra\" >\n                \n                <MotivoNoCompra/>\n             \n             </div>\n             \n             <div className='mainContainerMotivoNoCompraInfo' >\n                    <div className=\"containerMotivoNoCompraInfo\" >\n                        <h2 className='motivoNoCompraTitulo' >Razones para no comprar</h2>\n                        <ul className='motivoNoCompraContenido'>\n                            <li>\n                                Si bien tener cerca el producto que se va a comprar es la razón más común para no haber realizado compras por \n                                internet, el miedo y la desconfianza son los mayores\n                                temores de los consumidores para esta relación comercial.\n                            </li>\n                           \n                        </ul>\n                    </div>\n                </div>\n         </div>\n         {\n             //Section 4: Motivaciones para comprar \n         }\n         <div id=\"motivoCompra\" className=\"mainContainerMotivoCompra\">\n              <div className=\"containerMotivoCompra\">\n                \n                <MotivacionCompra/>\n             \n             </div>\n             \n             <div className=\"mainContainerMotivoCompraInfo\">\n                    <div className='containerMotivoCompraInfo' >\n                        <h2 className='motivoCompraInfoTitulo'>Motivaciones para comprar</h2>\n                        <ul className='motivoCompraInfoContenido'>\n                            <li>\n                            Más información y garantías son las exigencias más comunes de los\n                             usuarios para disminuir sus temores y finalmente realizar alguna\n                            transacción comercial vía internet.\n\n                            </li>\n                           \n                        </ul>\n                    </div>\n                </div>\n         </div>\n         </>\n    )\n}\nexport default despliegueEstadisticas\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\index.js",["144","145"],"import React  from 'react'\nimport LogoCCE from '../assets/img/logoCCE.png'\nimport LogoUEES from '../assets/img/logoUEES.png'\nimport '../styles/indexStyle.css'\nconst Home = () => {\n   \n            return (\n            <>\n            <div className='mainContainerCss'>\n                        <p className=\"titulo\" >\n                            Datos públicos de Ecommerce del Ecuador 2021\n                        </p>\n                        <div className=\"containerCCE\" >\n                            <a target='_blank' href=\"https://cece.ec/\" rel=\"noreferrer\">\n                                <img src={LogoCCE} className=\"logoCCE\" >\n                                </img>\n                            </a>\n                            <p className=\"CCEContenido\" >\n                                La Cámara Ecuatoriana de Comercio Electrónico es una asociación sin\n                                 fines de lucro creada en el 2014 con el objetivo de divulgar y promover \n                                 el uso de las nuevas tecnologías aplicadas al trabajo y los negocios, \n                                 las comunicaciones, el comercio y los negocios electrónicos.\n                                La cual intenta fomentar que siga creciendo el ecosistema del comercio \n                                electrónico en el país y la región.\n                                Link: https://cece.ec\n\n                            </p>\n                        </div>\n                        <div className=\"containerUESS\">\n                             <a target=\"_blank\" href=\"https://www.uees.edu.ec/investigacion/\" rel=\"noreferrer\">\n                             <img src={LogoUEES} className=\"logoUESS\"></img>\n                                </a>\n                            \n                            <p className=\"contenidoUESS\">\n                                La Universidad Espíritu Santo actualmente cuenta con alrededor de 5.000 estudiantes. \n                                Tiene diez facultades y 51 carreras (entre Pregrado y Postgrado). Su misión es servir a \n                                la sociedad mediante la generación de entornos de aprendizaje para la formación integral \n                                de personas que, a través de la docencia, investigación y vinculación, contribuyan al desarrollo\n                                 del país.\n                                La UEES se visualiza como un centro de docencia, investigación y orientación que aporta\n                                 alternativas para el desarrollo del país.\n                                LINK: https://www.uees.edu.ec/investigacion/\n                            </p>\n                        </div>\n            </div>  \n            <div style={{\n                display:'flex',\n                backgroundColor:'black',\n                height:'9vh',\n                justifyContent:'center',\n                alignItems: 'center',\n                color: 'white'\n            }}>\n                \n                @2021 Datos públicos de Ecommerce en Ecuador\n            </div>\n            </>\n            )\n    }\n\nexport default Home\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\restVsGraphQL2018.js",["146","147"],"import React,{useState,useEffect} from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport axios from 'axios'\nimport BarChartGraphQL from '../components/Charts/BarChartRestVsGraphQL/BarChartGraphQL'\nimport '../styles/restVsGraphQL.css'\n\nconst FRECUENCIAUSOINTERNET2018 = gql `\nquery obtenerFrecuenciaUsoInternet2018{\n    obtenerFrecuenciaUsoInternet2018{\n        TodosLosDias\n        CadaDosDias\n        CadaTresDias\n        CadaCuatroDias\n        CadaCincoDias\n        tamanio\n    }\n}\n`\nconst RestVsGraphQL2018 = () => {\n    \n    const [endRest, setEndRest] = useState(0)\n    const [dateEndRest, setDateEndRest] = useState(new Date());\n     \n    let startQL = new Date().getTime();\n    let dateStartQL = new Date(startQL);\n    let endQL = 0;\n    let dateEndQL= new Date();\n    let resQL = 0;\n    const {data, loading, error}= useQuery(FRECUENCIAUSOINTERNET2018);\n    \n    if(!error && !loading) {\n        const data2 =data\n        console.log(data2)\n        console.log()\n        console.log('Tiempo al iniciar GraphQL en ms: '+startQL+\"ms\")\n        endQL= new Date().getTime()+1;\n        dateEndQL = new Date(endQL);\n    }\n        resQL =endQL-startQL; \n        console.log(\"Tiempo de finalización GraphQL en ms: \"+endQL+\"ms\");\n        console.log(\"Resultado del tiempo de ejecución GraphQL: \"+resQL) \n\n    //Api rest\n    let startRest = new Date().getTime();\n    let dateStartRest = new Date(startRest);\n        useEffect(() => {\n            axios.get(\"https://salty-fjord-38974.herokuapp.com/api/frecuenciaUsoInternet2018/\")\n            .then(result=>{\n                console.log(result)\n                \n            }\n            ).catch(console.log() )\n            setEndRest (new Date().getTime());\n            console.log(endRest)    \n        }, [])\n        \n        let resRest = startRest- endRest;\n        \n        useEffect(()=>{\n            setDateEndRest(new Date(endRest+resRest));\n        },[])\n        const datosTamanio = ()=>{\n            if(data){\n                return <text>{data.obtenerFrecuenciaUsoInternet2018.tamanio+\" bytes\"}</text>\n            }\n            else{\n                return <text>Loading</text>\n            }\n        }\n    return (\n         <>\n        <div className='mainContainerRVG'>\n                       <div className=\"tituloRest\">\n                           Análisis de tiempo de  respuesta Api Graphql vs Api Rest\n                       </div>\n            \n            <div className=\"containerChartContenido\">\n                            \n                   <BarChartGraphQL tiempoRest={resRest} tiempoGraphQL ={resQL}/>\n               \n                <ul className='contenidoGraphQL'>\n                    <text style={{\n                        fontWeight:'bold'\n                    }}>Análisis de tiempo de respuesta API GraphQL con la petición al endpoint \"Frecuencia\n                     de uso de internet\"</text>\n                    <li style={{marginTop:\"4vh\"}}>\n                            Tiempo de inicio: {`${dateStartQL.toTimeString().substring(0,8)} ${dateStartQL.getMilliseconds()} ms`}\n                    </li>\n                    <li>\n                            Tiempo de finalización: {`${dateEndQL.toTimeString().substring(0,8)} ${dateEndQL.getMilliseconds()} ms`} \n                    </li>\n                    <li>\n                            Tiempo transcurrido total: {`${resQL} ms`} \n                    </li>\n                    <li>\n                            Número de datos obtenidos: 1300\n                    </li>\n                    <li>\n                            Tamaño de los datos : {datosTamanio()}\n                    </li>\n                </ul>\n            </div>\n            <div className='containerRest'>\n                      <ul style={{\n                          marginTop:'-5%',\n                          color:'#82ca9d'\n                      }}>\n                      <text style={{\n                        fontWeight:'bold'\n                    }}>Análisis de tiempo de respuesta API Rest con la petición al endpoint \"Frecuencia\n                     de uso de internet\"</text>\n                    <li style={{marginTop:\"4vh\"}}>\n                        Tiempo de inicio: {`${dateEndRest.toTimeString().substring(0,8)} ${dateEndRest.getMilliseconds()} ms`}\n                    </li>\n                    <li>\n                        Tiempo de finalización: {`${dateStartRest.toTimeString().substring(0,8)} ${dateStartRest.getMilliseconds()} ms`} \n                    </li>\n                    <li>\n                        Tiempo transcurrido total: {`${resRest} ms`} \n                    </li>\n                    <li>\n                        Número de datos obtenidos: 1300\n                    </li>\n                    <li>\n                         Tamaño de los datos : {datosTamanio()}\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n        </>\n    )\n}\n\nexport default RestVsGraphQL2018\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas2020.js",["148"],"import React from 'react'\nimport '../components/Spinner/spinnerStyle.css'\nimport PieFrecuencia from '../components/Charts/PieChartFrecuenciaCompra/PieFrecuencia2020'\nimport MotivoNoCompra from '../components/Charts/BarChartMotivoNoCompra/MotivoNoCompra2020'\nimport CompraNoCompra from '../components/Charts/PieChartCompraNoCompra/CompraNoCompra2020'\nimport MotivacionCompra from '../components/Charts/VerticalChart/VerticalChartMotivacionComprar2020'\n//ASSETS BACKGROUNDS\nimport BackgroundPortada from \"../assets/img/portadaEcommerceDark.jpg\"\n//ICONS\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faAngleRight} from '@fortawesome/free-solid-svg-icons'\nconst despliegueEstadisticas2020 = () => {\n    return (\n        <>\n            {\n                //Portada\n            }\n            <div style={{\n                display:\"flex\",\n                height:\"90vh\",\n                backgroundImage: `url(${BackgroundPortada} )`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat'\n            }}>\n                <div style={{\n                        display: 'flex',\n                        width:'100vw',\n                        height:'100vh',\n                        background: 'transparent',\n                        paddingTop: \"21vh\",\n                        fontWeight: \"bold\"\n                        }}>\n                        <div className=\"iconNav\"><FontAwesomeIcon className='icon' icon={faAngleRight}/>    \n                            <ul className=\"nav\">\n                                <li><a href=\"#\">Glosario</a></li>\n                                <li><a href=\"#compraNoCompra\">Algunos datos del Ecuador</a></li>\n                                <li><a href=\"#frecuenciaUsoInternet\">Frecuencia de uso de Internet</a></li>\n                                <li><a href=\"#motivoNoCompra\">Razones para no comprar</a></li>\n                                <li><a href=\"#motivoCompra\">Motivaciones para comprar</a> </li>\n                            </ul>\n                        </div>\n                        <h2 className='titulo'>  Antecedentes y situación del Ecommerce en el Ecuador</h2>\n                \n                    </div>\n                    <div style={{\n                        display: 'flex',\n                        width:'100vw',\n                        height:'90vh',\n                        background: 'transparent'\n                    }}>\n                        \n                    </div>\n                </div>\n            {\n                //Section 1: Porcentaje de compra\n            }\n            <div id=\"compraNoCompra\" className=\"mainContainer\">\n                <div className=\"firstContainer\">\n                    \n                    <CompraNoCompra/>\n                    <ul className=\"infoCompraNoCompra\">\n                                <li>* El 68% indica el porcentaje de personas que no realizan comercio electrónico \n                                    en un total de 1279 encuestas realizadas y el 32% las personas que si realizan \n                                    comercio electrónico\n                                </li>\n                            </ul>\n                </div>\n                <div className='mainContainerInfoChartMotivoNoCompra'>\n                        <div className='containerInfoChartMotivoNoCompra'>\n                            <h2 className='infoChartMotivoNoCompraTitulo'>Algunos datos del Ecuador</h2>\n                            <ul className='infoChartMotivoNoCompraContenido'>\n                                <li>Las empresas no escapan de este lento desarrollo de transacciones online \n                                    puesto que menos del 20% de las empresas realizan comercio electrónico\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n            </div>\n\n\n\n            <div id=\"frecuenciaUsoInternet\" className='mainContainerFrecuenciaUsoInternet'>\n                \n                <div className='containerFrecuenciaUsoInternetChart'>\n                    \n                    <PieFrecuencia/>\n                    <ul className=\"infoChartFrecuenciaUsoInternet\">\n                                <li>* El 93.2% indica el porcentaje de personas que utilizan internet varias\n                                    veces al día, el 4.5% el porcentaje de personas que lo utilizan una o datos\n                                    veces al día, el 1.7% cada dos o tres días y el 0.6% representa una vez a \n                                    la semana\n                                </li>\n                            </ul>\n                </div>\n                    <div className='mainContainerFrecuenciaUsoInternetInfo'>\n                        <div className='containerFrecuenciaUsoInternetInfo'>\n                            <h2 className=\"frecuenciaUsoInternetInfoTitulo\">Frecuencia de Uso de Internet</h2>\n                            <ul className='frecuenciaUsoInternetInfoContenido'>\n                                <li>Internet se ha vuelto \n                                    imprescindible en las actividades \n                                    diarias, por eso su consulta es \n                                    constante. Estar “online” en \n                                    aplicaciones para comunicarse y \n                                    redes sociales, le da a los \n                                    usuarios el don de la ubicuidad \n                                    virtual con un solo click\n                                </li>\n                                \n                            </ul>\n                        </div>\n                    </div>\n                \n            </div>\n            {\n                //Section 2 \n            }\n            <div id=\"motivoNoCompra\" className='mainContainerMotivoNoCompra'>\n                <div className=\"containerMotivoNoCompra\">\n                    \n                    <MotivoNoCompra/>\n                \n                </div>\n                \n                <div className='mainContainerMotivoNoCompraInfo'>\n                        <div className=\"containerMotivoNoCompraInfo\">\n                            <h2 className='motivoNoCompraTitulo'>Razones para no comprar</h2>\n                            <ul className='motivoNoCompraContenido'>\n                                <li>\n                                    Si bien tener cerca el producto que se va a comprar es la razón más común para no haber realizado compras por \n                                    internet, el miedo y la desconfianza son los mayores\n                                    temores de los consumidores para esta relación comercial.\n                                </li>\n                            \n                            </ul>\n                        </div>\n                    </div>\n            </div>\n            {\n                //Section Motivaciones para comprar \n            }\n            <div id=\"motivoCompra\" className=\"mainContainerMotivoCompra\">\n                <div className=\"containerMotivoCompra\">\n                    \n                    <MotivacionCompra/>\n                \n                </div>\n                \n                <div className=\"mainContainerMotivoCompraInfo\">\n                        <div className='containerMotivoCompraInfo'>\n                            <h2 className='motivoCompraInfoTitulo'>Motivaciones para comprar</h2>\n                            <ul className='motivoCompraInfoContenido'>\n                                <li>\n                                Más información y garantías son las exigencias más comunes de los\n                                usuarios para disminuir sus temores y finalmente realizar alguna\n                                transacción comercial vía internet.\n\n                                </li>\n                            \n                            </ul>\n                        </div>\n                    </div>\n            </div>\n        </>\n        \n    )\n}\n\nexport default despliegueEstadisticas2020\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\contacto.js",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\despliegueEstadisticas2018.js",["149"],"import React from 'react'\nimport '../components/Spinner/spinnerStyle.css'\nimport PieFrecuencia from '../components/Charts/PieChartFrecuenciaCompra/PieFrecuencia2018'\nimport MotivoNoCompra from '../components/Charts/BarChartMotivoNoCompra/MotivoNoCompra2018'\nimport CompraNoCompra from '../components/Charts/PieChartCompraNoCompra/CompraNoCompra2018'\nimport MotivacionCompra from '../components/Charts/VerticalChart/VerticalChartMotivacionComprar2018'\n//ASSETS BACKGROUNDS\nimport BackgroundPortada from \"../assets/img/portadaEcommerceDark.jpg\"\n//ICONS\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faAngleRight} from '@fortawesome/free-solid-svg-icons'\nconst despliegueEstadisticas2018 = () => {\n    return (\n        <>\n            {\n                //Portada\n            }\n            <div style={{\n                display:\"flex\",\n                height:\"90vh\",\n                backgroundImage: `url(${BackgroundPortada} )`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat'\n            }}>\n                <div style={{\n                        display: 'flex',\n                        width:'100vw',\n                        height:'100vh',\n                        background: 'transparent',\n                        paddingTop: \"21vh\",\n                        fontWeight: \"bold\"\n                        }}>\n                    \n                    <div className=\"iconNav\"><FontAwesomeIcon className='icon' icon={faAngleRight}/>    \n                        <ul className=\"nav\">\n                            <li><a href=\"#\">Glosario</a></li>\n                            <li><a href=\"#compraNoCompra\">Algunos datos del Ecuador</a></li>\n                            <li><a href=\"#frecuenciaUsoInternet\">Frecuencia de uso de Internet</a></li>\n                            <li><a href=\"#motivoNoCompra\">Razones para no comprar</a></li>\n                            <li><a href=\"#motivoCompra\">Motivaciones para comprar</a> </li>\n                        </ul>\n                    </div>\n                        <h2 className='titulo'>  Antecedentes y situación del Ecommerce en el Ecuador</h2>\n                \n                    </div>\n                    <div style={{\n                        display: 'flex',\n                        width:'100vw',\n                        height:'90vh',\n                        background: 'transparent'\n                    }}>\n                        \n                    </div>\n                </div>\n            {\n                //Section 1: Porcentaje de compra\n            }\n            <div id=\"compraNoCompra\" className=\"mainContainer\" >\n                <div className=\"firstContainer\">\n                    \n                    <CompraNoCompra/>\n                    <ul className=\"infoCompraNoCompra\">\n                                <li>* El 66% indica el porcentaje de personas que no realizan comercio electrónico \n                                    en un total de 1279 encuestas realizadas y el 34% las personas que si realizan \n                                    comercio electrónico\n                                </li>\n                            </ul>\n                </div>\n                <div className='mainContainerInfoChartMotivoNoCompra'>\n                        <div className='containerInfoChartMotivoNoCompra'>\n                            <h2 className='infoChartMotivoNoCompraTitulo'>Algunos datos del Ecuador</h2>\n                            <ul className='infoChartMotivoNoCompraContenido'>\n                                <li>Las empresas no escapan de este lento desarrollo de transacciones online \n                                    puesto que menos del 20% de las empresas realizan comercio electrónico\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n            </div>\n\n\n\n            <div id=\"frecuenciaUsoInternet\" className='mainContainerFrecuenciaUsoInternet'>\n                \n                <div className='containerFrecuenciaUsoInternetChart'>\n                    \n                    <PieFrecuencia/>\n                    <ul className=\"infoChartFrecuenciaUsoInternet\">\n                                <li>* El 91% indica el porcentaje de personas que utilizan internet varias\n                                    veces al día, el 6% el porcentaje de personas que lo utilizan una o datos\n                                    veces al día, el 2% cada dos o tres días y el 0.6% representa una vez a \n                                    la semana\n                                </li>\n                            </ul>\n                </div>\n                    <div className='mainContainerFrecuenciaUsoInternetInfo'>\n                        <div className='containerFrecuenciaUsoInternetInfo'>\n                            <h2 className=\"frecuenciaUsoInternetInfoTitulo\" >Frecuencia de Uso de Internet</h2>\n                            <ul className='frecuenciaUsoInternetInfoContenido'>\n                                <li>Internet se ha vuelto \n                            imprescindible en las actividades \n                            diarias, por eso su consulta es \n                            constante. Estar “online” en \n                            aplicaciones para comunicarse y \n                            redes sociales, le da a los \n                            usuarios el don de la ubicuidad \n                            virtual con un solo click</li>\n                                \n                            </ul>\n                        </div>\n                    </div>\n                \n            </div>\n            {\n                //Section 2 \n            }\n            <div id=\"motivoNoCompra\" className='mainContainerMotivoNoCompra'>\n                <div className=\"containerMotivoNoCompra\">\n                    \n                    <MotivoNoCompra/>\n                \n                </div>\n                \n                <div className='mainContainerMotivoNoCompraInfo'>\n                        <div className=\"containerMotivoNoCompraInfo\">\n                            <h2 className='motivoNoCompraTitulo'>Razones para no comprar</h2>\n                            <ul className='motivoNoCompraContenido'>\n                                <li>\n                                    Si bien tener cerca el producto que se va a comprar es la razón más común para no haber realizado compras por \n                                    internet, el miedo y la desconfianza son los mayores\n                                    temores de los consumidores para esta relación comercial.\n                                </li>\n                            \n                            </ul>\n                        </div>\n                    </div>\n            </div>\n            {\n                //Section Motivaciones para comprar \n            }\n            <div id=\"motivoCompra\" className=\"mainContainerMotivoCompra\">\n                <div className=\"containerMotivoCompra\">\n                    \n                    <MotivacionCompra/>\n                \n                </div>\n                \n                <div className=\"mainContainerMotivoCompraInfo\">\n                        <div className='containerMotivoCompraInfo'>\n                            <h2 className='motivoCompraInfoTitulo'>Motivaciones para comprar</h2>\n                            <ul className='motivoCompraInfoContenido'>\n                                <li>\n                                Más información y garantías son las exigencias más comunes de los\n                                usuarios para disminuir sus temores y finalmente realizar alguna\n                                transacción comercial vía internet.\n\n                                </li>\n                            \n                            </ul>\n                        </div>\n                    </div>\n            </div>\n        </>\n        \n    )\n}\n\nexport default despliegueEstadisticas2018\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\restVsGraphQL.js",["150","151"],"//Cliente\n\nimport React,{useState,useEffect} from 'react'\nimport {useQuery,gql} from '@apollo/client'\nimport axios from 'axios'\nimport BarChartGraphQL from '../components/Charts/BarChartRestVsGraphQL/BarChartGraphQL'\nimport '../styles/restVsGraphQL.css'\n\nconst FRECUENCIAUSOINTERNET = gql `\nquery obtenerFrecuenciaUsoInternet{\n    obtenerFrecuenciaUsoInternet{\n        TodosLosDias\n        CadaDosDias\n        CadaTresDias\n        CadaCuatroDias\n        CadaCincoDias\n        tamanio\n    }\n}\n`\n\nconst RestVsGraphQL = () => {\n    \n    const [endRest, setEndRest] = useState(0)\n    const [dateEndRest, setDateEndRest] = useState(new Date())\n     \n    let startQL = new Date().getTime();\n    let dateStartQL = new Date(startQL);\n    let endQL = 0;\n    let dateEndQL= new Date();\n    let resQL = 0;\n    const {data, loading, error}= useQuery(FRECUENCIAUSOINTERNET);\n    \n    if(!error && !loading) {\n        const data2 =data\n        console.log(data2)\n        console.log()\n        console.log('Tiempo al iniciar GraphQL en ms: '+startQL+\"ms\")\n        endQL= new Date().getTime()+1;\n        dateEndQL = new Date(endQL);\n    }\n        resQL =endQL-startQL; \n        console.log(\"Tiempo de finalización GraphQL en ms: \"+endQL+\"ms\");\n        console.log(\"Resultado del tiempo de ejecución GraphQL: \"+resQL) \n\n    //Api rest\n    let startRest = new Date().getTime();\n    let dateStartRest = new Date(startRest);\n        useEffect(() => {\n            axios.get(\"https://salty-fjord-38974.herokuapp.com/api/frecuenciaUsoInternet/\")\n            .then(result=>{\n                console.log(result)\n                \n            }\n            ).catch(console.log() )\n            setEndRest (new Date().getTime());\n            console.log(endRest)    \n        }, [])\n        \n        let resRest = startRest- endRest;\n        \n        useEffect(()=>{\n            setDateEndRest(new Date(endRest+resRest));\n        },[])\n        const datosTamanio = ()=>{\n            if(data){\n                return <text>{data.obtenerFrecuenciaUsoInternet.tamanio+\" bytes\"}</text>\n            }\n            else{\n                return <text>Loading</text>\n            }\n        }\n    return (\n         <>\n        <div className='mainContainerRVG'>\n                       <div className=\"tituloRest\">\n                           Análisis de tiempo de  respuesta Api Graphql vs Api Rest\n                       </div>\n            \n            <div className=\"containerChartContenido\">\n                            \n                   <BarChartGraphQL tiempoRest={resRest} tiempoGraphQL ={resQL}/>\n               \n                <ul className='contenidoGraphQL'>\n                    <text style={{\n                        fontWeight:'bold'\n                    }}>Análisis de tiempo de respuesta API GraphQL con la petición al endpoint \"Frecuencia\n                     de uso de internet\"</text>\n                    <li style={{marginTop:\"4vh\"}}>\n                            Tiempo de inicio: {`${dateStartQL.toTimeString().substring(0,8)} ${dateStartQL.getMilliseconds()} ms`}\n                    </li>\n                    <li>\n                            Tiempo de finalización: {`${dateEndQL.toTimeString().substring(0,8)} ${dateEndQL.getMilliseconds()} ms`} \n                    </li>\n                    <li>\n                            Tiempo transcurrido total: {`${resQL} ms`} \n                    </li>\n                    <li>\n                            Número de datos obtenidos: 1300\n                    </li>\n                    <li>\n                            Tamaño de los datos : {datosTamanio()}\n                    </li>\n                </ul>\n            </div>\n            <div className='containerRest'>\n                      <ul style={{\n                          marginTop:'-5%',\n                          color:'#82ca9d'\n                      }}>\n                      <text style={{\n                        fontWeight:'bold'\n                    }}>Análisis de tiempo de respuesta API Rest con la petición al endpoint \"Frecuencia\n                     de uso de internet\"</text>\n                    <li style={{marginTop:\"4vh\"}}>\n                        Tiempo de inicio: {`${dateEndRest.toTimeString().substring(0,8)} ${dateEndRest.getMilliseconds()} ms`}\n                    </li>\n                    <li>\n                        Tiempo de finalización: {`${dateStartRest.toTimeString().substring(0,8)} ${dateStartRest.getMilliseconds()} ms`} \n                    </li>\n                    <li>\n                        Tiempo transcurrido total: {`${resRest} ms`} \n                    </li>\n                    <li>\n                        Número de datos obtenidos: 1300\n                    </li>\n                    <li>\n                         Tamaño de los datos : {datosTamanio()}\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n        </>\n    )\n}\n\nexport default RestVsGraphQL\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\api.js",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\pages\\apiRest.js",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Navbar\\NavbarElementos.js",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\DropDown\\Dropdown.js",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2018.jsx",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia.jsx",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2020.jsx",["152"],"import {Spinner} from 'reactstrap'\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from 'graphql-tag';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Cell, ResponsiveContainer\n} from 'recharts';\n\n\nconst MOTIVONOCOMPRA2020 = gql `\nquery obtenerMotivoNoCompra2020 {\n    obtenerMotivoNoCompra2020 @rest(path:\"/api/motivoNoCompra2020\", type:\"motivoTotal\"){\n      PrefieroVerLoQueCompro\n      MiedoEntregarInfPer\n      MiedoSerEstafadoEnganiado\n      DesconfianzaFormaDePago\n    }\n}\n`\nconst MotivoNoCompra2020 = () => (\n  <Query query={MOTIVONOCOMPRA2020}>\n  {({ loading, error, data }) => {\n    if (error)\n      return (\n        <div>{`There was an error fetching the data ${error.message}`}</div>\n      );\n      if(loading)\n      {\n        return (\n                  <div className=\"divHijo\">\n                      <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                  </div>\n    )\n      }\n      else{\n        \n      const datosBar = [\n        {\n            motivo: 'Prefiero ver lo que compro',  valor: ((data.obtenerMotivoNoCompra2020.PrefieroVerLoQueCompro* 100)/1279)/2\n        },\n        {\n            motivo: 'Miedo a entregar información personal', valor: ((data.obtenerMotivoNoCompra2020.MiedoEntregarInfPer*100)/1279)/2 \n        },\n        {\n            motivo: 'Miedo a ser estafado o engañado',  valor: ((data.obtenerMotivoNoCompra2020.MiedoSerEstafadoEnganiado*100)/1279)/2\n        },\n        {\n            motivo: 'Desconfianza en la forma de pago',  valor: ((data.obtenerMotivoNoCompra2020.DesconfianzaFormaDePago*100)/1279)/2\n        },\n        ];\n    \n        const CustomLabel  = () =>{   \n                return (\n                  <g>\n                    <foreignObject x={15} y=\"40%\" width={100} height={100}>\n                      <div>%</div>\n                    </foreignObject>\n                  </g>\n                );\n        };\n        return (\n          <ResponsiveContainer width=\"99%\" height={\"100%\"}>\n              <BarChart\n                width={400}\n                height={400}\n                data={datosBar}\n                margin={{\n                  top: 5, right: 30, left: 20, bottom: 5,\n                }}\n                barSize={40}\n              >\n                <XAxis dataKey=\"motivo\" fontSize=\"0\" scale=\"point\" padding={{ left: 40, right: 40 }} />\n                <YAxis label={CustomLabel}/> \n                <Tooltip />\n                <Legend />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Bar padding={{left:30}} dataKey=\"valor\" fill=\"#8884d8\" background={{ fill: '#eee' }} />\n              </BarChart>\n          </ResponsiveContainer>\n        )\n      }\n  }}\n  </Query>\n)\n\nexport default MotivoNoCompra2020\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartFrecuenciaCompra\\PieFrecuencia2020.jsx",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra2018.jsx",["153"],"import {Spinner} from 'reactstrap'\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from 'graphql-tag';\n\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Cell, ResponsiveContainer\n} from 'recharts';\n\n\nconst MOTIVONOCOMPRA2018 = gql `\nquery obtenerMotivoNoCompra2018 {\n    obtenerMotivoNoCompra2018 @rest(path:\"/api/motivoNoCompra2018\", type:\"motivoTotal\"){\n      PrefieroVerLoQueCompro\n      MiedoEntregarInfPer\n      MiedoSerEstafadoEnganiado\n      DesconfianzaFormaDePago\n    }\n}\n`\nconst MotivoNoCompra2018 = () => (\n    <Query query={MOTIVONOCOMPRA2018}>\n    {({ loading, error, data }) => {\n       if (error)\n        return (\n          <div>{`There was an error fetching the data ${error.message}`}</div>\n        );\n      console.log(data);\n      if(loading)\n      {\n        return (\n                  <div className=\"divHijo\">\n                      <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                  </div>\n        )\n      }\n    else{\n      \n    const datosBar = [\n      {\n          motivo: 'Prefiero ver lo que compro',  valor: ((data.obtenerMotivoNoCompra2018.PrefieroVerLoQueCompro* 100)/1279)/2\n      },\n      {\n          motivo: 'Miedo a entregar información personal', valor: ((data.obtenerMotivoNoCompra2018.MiedoEntregarInfPer*100)/1279)/2 \n      },\n      {\n          motivo: 'Miedo a ser estafado o engañado',  valor: ((data.obtenerMotivoNoCompra2018.MiedoSerEstafadoEnganiado*100)/1279)/2\n      },\n      {\n          motivo: 'Desconfianza en la forma de pago',  valor: ((data.obtenerMotivoNoCompra2018.DesconfianzaFormaDePago*100)/1279)/2\n      },\n      ];\n  \n      const CustomLabel  = () =>{   \n              return (\n                <g>\n                  <foreignObject x={15} y=\"40%\" width={100} height={100}>\n                    <div>%</div>\n                  </foreignObject>\n                </g>\n              );\n      };\n      return (\n        <ResponsiveContainer width=\"99%\" height={\"100%\"}>\n            <BarChart\n              width={400}\n              height={400}\n              data={datosBar}\n              margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n              }}\n              barSize={40}\n            >\n              <XAxis dataKey=\"motivo\" fontSize=\"0\" scale=\"point\" padding={{ left: 40, right: 40 }} />\n              <YAxis label={CustomLabel}/> \n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Bar padding={{left:30}} dataKey=\"valor\" fill=\"#8884d8\" background={{ fill: '#eee' }} />\n            </BarChart>\n        </ResponsiveContainer>\n      )\n    }\n    }}\n  </Query>\n)\n\nexport default MotivoNoCompra2018\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra.jsx",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartMotivoNoCompra\\MotivoNoCompra.jsx",["154"],"import {Spinner} from 'reactstrap'\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from 'graphql-tag';\n\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Cell, ResponsiveContainer\n} from 'recharts';\n\n\nconst MOTIVONOCOMPRA = gql `\nquery obtenerMotivoNoCompra {\n    obtenerMotivoNoCompra @rest(path:\"/api/motivoNoCompra\", type:\"motivoTotal\"){\n      PrefieroVerLoQueCompro\n      MiedoEntregarInfPer\n      MiedoSerEstafadoEnganiado\n      DesconfianzaFormaDePago\n    }\n}\n`\nconst MotivoNoCompra = () => (\n<Query query={MOTIVONOCOMPRA}>\n    {({ loading, error, data }) => {\n     if (error)\n        return (\n          <div>{`There was an error fetching the data ${error.message}`}</div>\n        );\n\n\n        if(loading)\n        {\n          return (\n                    <div className=\"divHijo\">\n                        <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                    </div>\n      )\n        }\n        else{\n          \n        const datosBar = [\n          {\n              motivo: 'Prefiero ver lo que compro',  valor: ((data.obtenerMotivoNoCompra.PrefieroVerLoQueCompro* 100)/1279)/2\n          },\n          {\n              motivo: 'Miedo a entregar información personal', valor: ((data.obtenerMotivoNoCompra.MiedoEntregarInfPer*100)/1279)/2 \n          },\n          {\n              motivo: 'Miedo a ser estafado o engañado',  valor: ((data.obtenerMotivoNoCompra.MiedoSerEstafadoEnganiado*100)/1279)/2\n          },\n          {\n              motivo: 'Desconfianza en la forma de pago',  valor: ((data.obtenerMotivoNoCompra.DesconfianzaFormaDePago*100)/1279)/2\n          },\n          ];\n      \n          const CustomLabel  = () =>{   \n                  return (\n                    <g>\n                      <foreignObject x={15} y=\"40%\" width={100} height={100}>\n                        <div>%</div>\n                      </foreignObject>\n                    </g>\n                  );\n          };\n          return (\n            <ResponsiveContainer width={\"99%\"} height={\"100%\"}>\n                <BarChart\n                  width={\"50%\"}\n                  height={\"50%\"}\n                  data={datosBar}\n                  margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                  }}\n                  barSize={40}\n                >\n                  <XAxis dataKey=\"motivo\" fontSize=\"0\" scale=\"point\" padding={{ left: 40, right: 40 }} />\n                  <YAxis label={CustomLabel}/> \n                  <Tooltip />\n                  <Legend />\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <Bar padding={{left:30}} dataKey=\"valor\" fill=\"#8884d8\" background={{ fill: '#eee' }} />\n                </BarChart>\n            </ResponsiveContainer>\n          )\n        }\n    \n    }}\n\n  </Query>\n)\n\nexport default MotivoNoCompra\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2020.jsx",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\PieChartCompraNoCompra\\CompraNoCompra2018.jsx",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2020.jsx",["155","156"],"import {Spinner} from 'reactstrap'\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from 'graphql-tag';\n\nimport { ComposedChart,Line,Area,Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\nimport './VerticalChart.css'\n\nconst MOTIVACIONCOMPRAR2020 = gql`\nquery obtenerMotivacionCompra2020 {\n    obtenerMotivacionCompra2020 @rest(path:\"/api/motivacionCompra2020\", type:\"motivacionCompraTotal\"){\n      tenerInformacionGuiaTutorialesCompra\n      tenerGarantiasEntregaPago\n      tenerAsistenciaAtencion\n      facilidadPago\n      formasPago\n      tutorialesInduccionParaRealizarCompra\n      variedadOferta\n      mejorPrecio\n      otras\n    }\n  }\n`\nconst VerticalChartMotivacionComprar2020 = () => (\n  <Query query={MOTIVACIONCOMPRAR2020}>{\n    ({ loading, error, data }) => {\n    if (error)\n      return (\n        <div>{`There was an error fetching the data ${error.message}`}</div>\n      );\n    console.log(data);\n    if(loading){\n      return (\n        \n                <div className=\"divHijo\">\n                     <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                </div>\n     \n      )\n    } \n    else{\n        //Graficas\n        const datosVertical = [\n            { name: 'Informacion y guía para la compra', valor: data.obtenerMotivacionCompra2020.tenerInformacionGuiaTutorialesCompra  },\n            { name: 'Garantías de entrega y pago', valor: data.obtenerMotivacionCompra2020.tenerGarantiasEntregaPago },\n            { name: 'Asistencia en la compra', valor: data.obtenerMotivacionCompra2020.tenerAsistenciaAtencion },\n            { name: 'Facilidad de pago', valor: data.obtenerMotivacionCompra2020.facilidadPago  },\n            { name: 'Formas de pago accesibles', valor: data.obtenerMotivacionCompra2020.formasPago },\n            { name: 'Tutoriales e inducción para realizar la compra', valor: data.obtenerMotivacionCompra2020.tutorialesInduccionParaRealizarCompra },\n            { name: 'Mayor variedad de ofertas', valor: data.obtenerMotivacionCompra2020.variedadOferta },\n            { name: 'Mejor precio', valor: data.obtenerMotivacionCompra2020.mejorPrecio },\n            { name: 'Otras', valor: data.obtenerMotivacionCompra2020.otras }\n          ];\n\n       \n    return (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <ComposedChart\n                  layout=\"vertical\"\n                  width={500}\n                  height={400}\n                  data={datosVertical}\n                  margin={{\n                      top: 10,\n                      right: 50,\n                      bottom: 20,\n                      left: 50,\n                  }}\n                  fontSize={15.5}\n              >\n              <CartesianGrid stroke=\"#f5f5f5\" />\n              <XAxis type=\"number\" />\n              <YAxis dataKey=\"name\" type=\"category\" scale=\"band\" width={200}/>\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"valor\" barSize={20} fill=\"#413ea0\" />\n              </ComposedChart>\n          </ResponsiveContainer>\n        \n        )\n    }\n  }\n  }</Query>\n)\n    \n \n\n\nexport default VerticalChartMotivacionComprar2020\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar.jsx",["157","158"],"import {Spinner} from 'reactstrap'\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from 'graphql-tag';\n\nimport { ComposedChart,Line,Area,Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\nimport './VerticalChart.css'\n\nconst MOTIVACIONCOMPRAR = gql`\nquery obtenerMotivacionCompra {\n    obtenerMotivacionCompra @rest(path:\"/api/motivacionCompra\", type:\"motivacionCompraTotal\"){\n      garantiaDevolucionCambio\n      garantiaConfidencialidadInformacion\n      informacionComoComprar\n      atencionClienteDuranteCompra\n      asistenciaDuranteProceso\n      bajoCostoEnvio\n      puntualidadEntrega\n      variedadOfertas\n      tutoriales\n      otras\n    }\n  }\n`\n\nconst VerticalChartMotivacionComprar = () => (\n  \n    <Query query={MOTIVACIONCOMPRAR}>{\n      ({ loading, error, data }) => {\n       if (error)\n        return (\n          <div>{`There was an error fetching the data ${error.message}`}</div>\n        );\n      console.log(data);\n\n    if(loading){\n          \n      return (\n        \n                <div className=\"divHijo\">\n                    <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                </div>\n    \n      )\n    } \n    else{\n        //Graficas\n        const datosVertical = [\n            { name: 'Garantía de devolución de cambio', valor: data.obtenerMotivacionCompra.garantiaDevolucionCambio },\n            { name: 'Garantía de confidencialidad', valor: data.obtenerMotivacionCompra.garantiaConfidencialidadInformacion },\n            { name: 'Más información de cómo comprar', valor: data.obtenerMotivacionCompra.informacionComoComprar },\n            { name: 'Atención al cliente durante la compra', valor: data.obtenerMotivacionCompra.atencionClienteDuranteCompra },\n            { name: 'Asistencia durante el proceso', valor: data.obtenerMotivacionCompra.asistenciaDuranteProceso },\n            { name: 'Bajos costos de envío', valor: data.obtenerMotivacionCompra.bajoCostoEnvio },\n            { name: 'Puntualidad de entrega', valor: data.obtenerMotivacionCompra.puntualidadEntrega },\n            { name: 'Mayor variedad de ofertas', valor: data.obtenerMotivacionCompra.variedadOfertas },\n            { name: 'Tutoriales o inducción para comprar', valor: data.obtenerMotivacionCompra.tutoriales },\n            { name: 'Otras', valor: data.obtenerMotivacionCompra.otras }\n          ];\n\n      \n    return (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <ComposedChart\n                  layout=\"vertical\"\n                  width={\"50%\"}\n                  height={\"50%\"}\n                  data={datosVertical}\n                  margin={{\n                      top: 10,\n                      right: 50,\n                      bottom: 20,\n                      left: 50,\n                  }}\n                  fontSize={'15.5'}\n              >\n              <CartesianGrid stroke=\"#f5f5f5\" />\n              <XAxis type=\"number\" />\n              <YAxis dataKey=\"name\" type=\"category\" scale=\"band\" width={200}/>\n              <Tooltip className=\"widthResponsive\"/>\n              <Legend />\n              <Bar dataKey=\"valor\" barSize={20} fill=\"#413ea0\" />\n              </ComposedChart>\n          </ResponsiveContainer>\n        \n        )\n    }\n    }\n    }</Query>\n   \n  )\n\n \n\n  \n  \n\n\nexport default VerticalChartMotivacionComprar\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\BarChartRestVsGraphQL\\BarChartGraphQL.jsx",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Charts\\VerticalChart\\VerticalChartMotivacionComprar2018.jsx",["159","160"],"import {Spinner} from 'reactstrap'\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from 'graphql-tag';\n\nimport { ComposedChart,Line,Area,Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\nimport './VerticalChart.css'\n\nconst MOTIVACIONCOMPRAR2018 = gql`\nquery obtenerMotivacionCompra2018 {\n    obtenerMotivacionCompra2018 @rest(path:\"/api/motivacionCompra2018\", type:\"motivacionCompraTotal\"){\n      garantiaDevolucionCambio\n      garantiaConfidencialidadInformacion\n      informacionComoComprar\n      atencionClienteDuranteCompra\n      asistenciaDuranteProceso\n      bajoCostoEnvio\n      puntualidadEntrega\n      variedadOfertas\n      tutoriales\n      otras\n    }\n  }\n`\n\nconst VerticalChartMotivacionComprar2018 = () => (\n  <Query query={MOTIVACIONCOMPRAR2018}>{\n    ({ loading, error, data }) => {\n       if (error)\n        return (\n          <div>{`There was an error fetching the data ${error.message}`}</div>\n        );\n      console.log(data);\n    if(loading){\n    \n        return (\n          \n                  <div className=\"divHijo\">\n                       <Spinner color=\"dark\" className=\"spinnerReactstrap\"/>\n                  </div>\n       \n        )\n    } \n    else{\n          //Graficas\n          const datosVertical = [\n              { name: 'Garantía de devolución de cambio', valor: data.obtenerMotivacionCompra2018.garantiaDevolucionCambio },\n              { name: 'Garantía de confidencialidad', valor: data.obtenerMotivacionCompra2018.garantiaConfidencialidadInformacion },\n              { name: 'Más información de cómo comprar', valor: data.obtenerMotivacionCompra2018.informacionComoComprar },\n              { name: 'Atención al cliente durante la compra', valor: data.obtenerMotivacionCompra2018.atencionClienteDuranteCompra },\n              { name: 'Asistencia durante el proceso', valor: data.obtenerMotivacionCompra2018.asistenciaDuranteProceso },\n              { name: 'Bajos costos de envío', valor: data.obtenerMotivacionCompra2018.bajoCostoEnvio },\n              { name: 'Puntualidad de entrega', valor: data.obtenerMotivacionCompra2018.puntualidadEntrega },\n              { name: 'Mayor variedad de ofertas', valor: data.obtenerMotivacionCompra2018.variedadOfertas },\n              { name: 'Tutoriales o inducción para comprar', valor: data.obtenerMotivacionCompra2018.tutoriales },\n              { name: 'Otras', valor: data.obtenerMotivacionCompra2018.otras }\n            ];\n\n         \n    return (\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <ComposedChart\n                    layout=\"vertical\"\n                    width={500}\n                    height={400}\n                    data={datosVertical}\n                    margin={{\n                        top: 10,\n                        right: 50,\n                        bottom: 20,\n                        left: 50,\n                    }}\n                    fontSize={15.5}\n                >\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <XAxis type=\"number\" />\n                <YAxis dataKey=\"name\" type=\"category\" scale=\"band\" width={200}/>\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"valor\" barSize={20} fill=\"#413ea0\" />\n                </ComposedChart>\n            </ResponsiveContainer>\n          \n          )\n      }\n    }\n    }</Query>\n)\n\nexport default VerticalChartMotivacionComprar2018\n","D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Playground\\RestPlayground\\PlaygroundRest.jsx",["161","162","163","164","165","166","167","168","169","170","171","172"],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\Playground\\GraphQLPlayground\\PlaygroundIde.jsx",[],"D:\\Programming\\Trabajo\\MGRN\\CCE\\Code GraphQL\\client\\src\\components\\DropDown\\MenuItems.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":23,"column":15,"nodeType":"179","messageId":"180","endLine":23,"endColumn":37},{"ruleId":"181","severity":1,"message":"182","line":38,"column":29,"nodeType":"183","endLine":38,"endColumn":41},{"ruleId":"184","severity":1,"message":"185","line":15,"column":33,"nodeType":"183","endLine":15,"endColumn":73},{"ruleId":"184","severity":1,"message":"185","line":31,"column":30,"nodeType":"183","endLine":31,"endColumn":71},{"ruleId":"186","severity":1,"message":"187","line":55,"column":12,"nodeType":"188","endLine":55,"endColumn":14,"suggestions":"189"},{"ruleId":"186","severity":1,"message":"190","line":61,"column":11,"nodeType":"188","endLine":61,"endColumn":13,"suggestions":"191"},{"ruleId":"181","severity":1,"message":"182","line":36,"column":37,"nodeType":"183","endLine":36,"endColumn":49},{"ruleId":"181","severity":1,"message":"182","line":37,"column":33,"nodeType":"183","endLine":37,"endColumn":45},{"ruleId":"186","severity":1,"message":"187","line":58,"column":12,"nodeType":"188","endLine":58,"endColumn":14,"suggestions":"192"},{"ruleId":"186","severity":1,"message":"190","line":64,"column":11,"nodeType":"188","endLine":64,"endColumn":13,"suggestions":"193"},{"ruleId":"177","severity":1,"message":"194","line":6,"column":63,"nodeType":"179","messageId":"180","endLine":6,"endColumn":67},{"ruleId":"177","severity":1,"message":"194","line":7,"column":63,"nodeType":"179","messageId":"180","endLine":7,"endColumn":67},{"ruleId":"177","severity":1,"message":"194","line":7,"column":63,"nodeType":"179","messageId":"180","endLine":7,"endColumn":67},{"ruleId":"177","severity":1,"message":"195","line":6,"column":24,"nodeType":"179","messageId":"180","endLine":6,"endColumn":28},{"ruleId":"177","severity":1,"message":"196","line":6,"column":29,"nodeType":"179","messageId":"180","endLine":6,"endColumn":33},{"ruleId":"177","severity":1,"message":"195","line":6,"column":24,"nodeType":"179","messageId":"180","endLine":6,"endColumn":28},{"ruleId":"177","severity":1,"message":"196","line":6,"column":29,"nodeType":"179","messageId":"180","endLine":6,"endColumn":33},{"ruleId":"177","severity":1,"message":"195","line":6,"column":24,"nodeType":"179","messageId":"180","endLine":6,"endColumn":28},{"ruleId":"177","severity":1,"message":"196","line":6,"column":29,"nodeType":"179","messageId":"180","endLine":6,"endColumn":33},{"ruleId":"181","severity":1,"message":"197","line":522,"column":41,"nodeType":"183","endLine":522,"endColumn":88},{"ruleId":"181","severity":1,"message":"197","line":523,"column":41,"nodeType":"183","endLine":523,"endColumn":82},{"ruleId":"181","severity":1,"message":"197","line":524,"column":41,"nodeType":"183","endLine":524,"endColumn":82},{"ruleId":"181","severity":1,"message":"197","line":525,"column":41,"nodeType":"183","endLine":525,"endColumn":84},{"ruleId":"181","severity":1,"message":"197","line":531,"column":41,"nodeType":"183","endLine":531,"endColumn":92},{"ruleId":"181","severity":1,"message":"197","line":532,"column":41,"nodeType":"183","endLine":532,"endColumn":86},{"ruleId":"181","severity":1,"message":"197","line":533,"column":41,"nodeType":"183","endLine":533,"endColumn":86},{"ruleId":"181","severity":1,"message":"197","line":534,"column":41,"nodeType":"183","endLine":534,"endColumn":88},{"ruleId":"181","severity":1,"message":"197","line":540,"column":41,"nodeType":"183","endLine":540,"endColumn":92},{"ruleId":"181","severity":1,"message":"197","line":541,"column":41,"nodeType":"183","endLine":541,"endColumn":86},{"ruleId":"181","severity":1,"message":"197","line":542,"column":41,"nodeType":"183","endLine":542,"endColumn":86},{"ruleId":"181","severity":1,"message":"197","line":543,"column":41,"nodeType":"183","endLine":543,"endColumn":88},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'setAbrirCerrarDropdown' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'endRest'. Either include it or remove the dependency array.","ArrayExpression",["200"],"React Hook useEffect has missing dependencies: 'endRest' and 'resRest'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDateEndRest' needs the current value of 'endRest'.",["201"],["202"],["203"],"'Cell' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"204","fix":"208"},{"desc":"206","fix":"209"},"Update the dependencies array to be: [endRest]",{"range":"210","text":"211"},"Update the dependencies array to be: [endRest, resRest]",{"range":"212","text":"213"},{"range":"214","text":"211"},{"range":"215","text":"213"},[1762,1764],"[endRest]",[1915,1917],"[endRest, resRest]",[1749,1751],[1902,1904]]